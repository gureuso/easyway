{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport $ from 'jquery';\nimport axios from 'axios';\nimport config from 'config.json';\nimport { Temperature } from './common';\n\nclass WeatherAPI {\n  constructor() {\n    _defineProperty(this, \"API_KEY\", config.WEATHER_API_KEY);\n  }\n\n  getCurrentWeather(location = 'Seoul') {\n    return axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${this.API_KEY}`).then(response => {\n      const weather = new Weather(response.data);\n      return weather.getData();\n    }).catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  getHourlyWeather() {\n    return axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Seoul&appid=' + this.API_KEY).then(response => {\n      let list = [];\n\n      for (const data of response.data.list) {\n        const weather = new Weather(data);\n        list.push(weather.getData());\n      }\n\n      return list;\n    }).catch(error => {\n      console.log(error);\n      return [];\n    });\n  }\n\n}\n\nclass Weather {\n  constructor(data) {\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"weather\", void 0);\n\n    _defineProperty(this, \"main\", void 0);\n\n    this.data = data;\n    this.weather = this.data.weather;\n    this.main = this.data.main;\n  }\n\n  getWeather() {\n    let data = {};\n\n    for (const w of this.weather) {\n      data.id = w.id;\n      data.icon = 'http://openweathermap.org/img/wn/' + w.icon + '@2x.png';\n      data.main = w.main;\n      data.desc = w.description;\n      break;\n    }\n\n    return data;\n  }\n\n  getTemp() {\n    const t = new Temperature();\n    const temp = t.kelvinToCelsius(this.main.temp);\n    const minTemp = t.kelvinToCelsius(this.main.temp_min);\n    const maxTemp = t.kelvinToCelsius(this.main.temp_max);\n    return {\n      temp,\n      minTemp,\n      maxTemp\n    };\n  }\n\n  getDateTime() {\n    return this.data.dt * 1000;\n  }\n\n  getData() {\n    const weather = this.getWeather();\n    const temp = this.getTemp();\n    const dt = this.getDateTime();\n    return $.extend(weather, temp, {\n      dt\n    });\n  }\n\n}\n\nexport { WeatherAPI };","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/lib/weather.tsx"],"names":["$","axios","config","Temperature","WeatherAPI","WEATHER_API_KEY","getCurrentWeather","location","get","API_KEY","then","response","weather","Weather","data","getData","catch","error","console","log","undefined","getHourlyWeather","list","push","constructor","main","getWeather","w","id","icon","desc","description","getTemp","t","temp","kelvinToCelsius","minTemp","temp_min","maxTemp","temp_max","getDateTime","dt","extend"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport axios from 'axios';\n\nimport config from 'config.json';\nimport { Temperature } from './common'\n\nclass WeatherAPI {\n  API_KEY: string = config.WEATHER_API_KEY;\n\n  getCurrentWeather(location: string='Seoul') {\n    return axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${this.API_KEY}`)\n    .then(response => {\n      const weather = new Weather(response.data);\n      return weather.getData();\n    })\n    .catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  getHourlyWeather() {\n    return axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Seoul&appid=' + this.API_KEY)\n    .then(response => {\n      let list: Array<Object> = [];\n      for(const data of response.data.list) {\n        const weather = new Weather(data);\n        list.push(weather.getData());\n      }\n      return list;\n    })\n    .catch(error => {\n      console.log(error);\n      return [];\n    });\n  }\n}\n\nclass Weather {\n  data: {[key: string]: any};\n  weather: Array<any>;\n  main: {[key: string]: any};\n\n  constructor(data: {[key: string]: any}) {\n    this.data = data;\n    this.weather = this.data.weather;\n    this.main = this.data.main;\n  }\n\n  private getWeather(): Object {\n    let data: any = {};\n    for(const w of this.weather) {\n      data.id = w.id;\n      data.icon = 'http://openweathermap.org/img/wn/' + w.icon + '@2x.png';\n      data.main = w.main;\n      data.desc = w.description;\n      break;\n    }\n    return data;\n  }\n\n  private getTemp(): Object {\n    const t = new Temperature();\n    const temp = t.kelvinToCelsius(this.main.temp);\n    const minTemp = t.kelvinToCelsius(this.main.temp_min);\n    const maxTemp = t.kelvinToCelsius(this.main.temp_max);\n    return {temp, minTemp, maxTemp};\n  }\n\n  private getDateTime(): number {\n    return this.data.dt * 1000;\n  }\n\n  getData(): Object {\n    const weather = this.getWeather();\n    const temp = this.getTemp();\n    const dt = this.getDateTime();\n    return $.extend(weather, temp, {dt});\n  }\n}\n\nexport { WeatherAPI };\n"]},"metadata":{},"sourceType":"module"}