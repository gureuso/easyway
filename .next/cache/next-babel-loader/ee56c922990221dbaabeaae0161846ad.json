{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport { WeatherAPI } from 'lib/weather';\n\nvar HourlyWeather =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HourlyWeather, _React$Component);\n\n  function HourlyWeather() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HourlyWeather);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HourlyWeather)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hourlyWeather: []\n    });\n\n    return _this;\n  }\n\n  _createClass(HourlyWeather, [{\n    key: \"setHourlyWeather\",\n    value: function setHourlyWeather() {\n      var _this2 = this;\n\n      var weatherAPI = new WeatherAPI();\n      weatherAPI.getHourlyWeather().then(function (list) {\n        var html = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(list.slice(0, 10)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var data = _step.value;\n            html.push(__jsx(\"div\", {\n              key: data.dt\n            }, moment(data.dt).format('HH:mm'), __jsx(\"br\", null), __jsx(\"img\", {\n              src: data.icon\n            }), __jsx(\"br\", null), data.temp, \"\\xB0\", __jsx(\"br\", null), data.main, __jsx(\"br\", null)));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this2.setState({\n          hourlyWeather: html\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setHourlyWeather();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.refresh == true) {\n        this.setHourlyWeather();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"hourly_weather\"\n      }, this.state.hourlyWeather);\n    }\n  }]);\n\n  return HourlyWeather;\n}(React.Component);\n\nexport default HourlyWeather;","map":null,"metadata":{},"sourceType":"module"}