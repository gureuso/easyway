{"ast":null,"code":"var _jsxFileName = \"/Users/yjh/Documents/React/easyway/components/pages/hourlyWeather.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport moment from 'moment';\nimport { WeatherAPI } from 'lib/weather';\n\nclass HourlyWeather extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      hourlyWeather: []\n    });\n  }\n\n  setHourlyWeather() {\n    const weatherAPI = new WeatherAPI();\n    weatherAPI.getHourlyWeather().then(list => {\n      let html = [];\n\n      for (const data of list.slice(0, 10)) {\n        html.push(__jsx(\"div\", {\n          key: data.dt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }\n        }, moment(data.dt).format('HH:mm'), __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 46\n          }\n        }), __jsx(\"img\", {\n          src: data.icon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }\n        }), __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 35\n          }\n        }), data.temp, \"\\xB0\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }\n        }), data.main, __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 24\n          }\n        })));\n      }\n\n      this.setState({\n        hourlyWeather: html\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setHourlyWeather();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.refresh == true) {\n      this.setHourlyWeather();\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"hourly_weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, this.state.hourlyWeather);\n  }\n\n}\n\nexport default HourlyWeather;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/components/pages/hourlyWeather.tsx"],"names":["React","moment","WeatherAPI","HourlyWeather","Component","hourlyWeather","setHourlyWeather","weatherAPI","getHourlyWeather","then","list","html","data","slice","push","dt","format","icon","temp","main","setState","componentDidMount","componentWillReceiveProps","nextProps","refresh","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,UAAT,QAA2B,aAA3B;;AAMA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAAgE;AAAA;AAAA;;AAAA,mCACtD;AACNC,MAAAA,aAAa,EAAE;AADT,KADsD;AAAA;;AAK9DC,EAAAA,gBAAgB,GAAG;AACjB,UAAMC,UAAU,GAAG,IAAIL,UAAJ,EAAnB;AACAK,IAAAA,UAAU,CAACC,gBAAX,GAA8BC,IAA9B,CAAoCC,IAAD,IAAe;AAChD,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAI,MAAMC,IAAV,IAAkBF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,EAAd,CAAlB,EAAqC;AACnCF,QAAAA,IAAI,CAACG,IAAL,CACE;AAAK,UAAA,GAAG,EAAEF,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGd,MAAM,CAACW,IAAI,CAACG,EAAN,CAAN,CAAgBC,MAAhB,CAAuB,OAAvB,CADH,EACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADnC,EAEE;AAAK,UAAA,GAAG,EAAEJ,IAAI,CAACK,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAEwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFxB,EAGGL,IAAI,CAACM,IAHR,UAGc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHd,EAIGN,IAAI,CAACO,IAJR,EAIa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJb,CADF;AAQD;;AACD,WAAKC,QAAL,CAAc;AAACf,QAAAA,aAAa,EAAEM;AAAhB,OAAd;AACD,KAbD;AAcD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,gBAAL;AACD;;AAEDgB,EAAAA,yBAAyB,CAACC,SAAD,EAAiB;AACxC,QAAGA,SAAS,CAACC,OAAV,IAAqB,IAAxB,EAA8B;AAC5B,WAAKlB,gBAAL;AACD;AACF;;AAEDmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWrB,aADd,CADF;AAKD;;AAvC6D;;AA0ChE,eAAeF,aAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport { WeatherAPI } from 'lib/weather';\n\ninterface HourlyWeatherProps {\n  refresh: boolean\n}\n\nclass HourlyWeather extends React.Component<HourlyWeatherProps> {\n  state = {\n    hourlyWeather: []\n  };\n\n  setHourlyWeather() {\n    const weatherAPI = new WeatherAPI();\n    weatherAPI.getHourlyWeather().then((list: any) => {\n      let html = [];\n      for(const data of list.slice(0, 10)) {\n        html.push(\n          <div key={data.dt}>\n            {moment(data.dt).format('HH:mm')}<br/>\n            <img src={data.icon}/><br/>\n            {data.temp}Â°<br/>\n            {data.main}<br/>\n          </div>\n        );\n      }\n      this.setState({hourlyWeather: html});\n    });\n  }\n\n  componentDidMount() {\n    this.setHourlyWeather();\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    if(nextProps.refresh == true) {\n      this.setHourlyWeather();\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"hourly_weather\">\n        {this.state.hourlyWeather}\n      </div>\n    );\n  }\n}\n\nexport default HourlyWeather;\n"]},"metadata":{},"sourceType":"module"}