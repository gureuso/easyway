{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yjh/Documents/React/easyway/components/pages/index/hourlyWeather.tsx\";\nimport React from 'react';\nimport moment from 'moment';\nimport { WeatherAPI } from 'lib/weather';\n\nvar HourlyWeather =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HourlyWeather, _React$Component);\n\n  function HourlyWeather() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HourlyWeather);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HourlyWeather)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hourlyWeather: []\n    });\n\n    return _this;\n  }\n\n  _createClass(HourlyWeather, [{\n    key: \"setHourlyWeather\",\n    value: function setHourlyWeather() {\n      var _this2 = this;\n\n      var weatherAPI = new WeatherAPI();\n      weatherAPI.getHourlyWeather().then(function (list) {\n        var html = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(list.slice(0, 10)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var data = _step.value;\n            html.push(React.createElement(\"div\", {\n              key: data.dt,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, moment(data.dt).format('HH:mm'), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }), React.createElement(\"img\", {\n              src: data.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23\n              },\n              __self: this\n            }), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23\n              },\n              __self: this\n            }), data.temp, \"\\xB0\", React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }), data.main, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25\n              },\n              __self: this\n            })));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this2.setState({\n          hourlyWeather: html\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setHourlyWeather();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.refresh == true) {\n        this.setHourlyWeather();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"hourly_weather\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.hourlyWeather);\n    }\n  }]);\n\n  return HourlyWeather;\n}(React.Component);\n\nexport default HourlyWeather;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/components/pages/index/hourlyWeather.tsx"],"names":["React","moment","WeatherAPI","HourlyWeather","hourlyWeather","weatherAPI","getHourlyWeather","then","list","html","slice","data","push","dt","format","icon","temp","main","setState","setHourlyWeather","nextProps","refresh","state","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,UAAT,QAA2B,aAA3B;;IAMMC,a;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,aAAa,EAAE;AADT,K;;;;;;;uCAIW;AAAA;;AACjB,UAAMC,UAAU,GAAG,IAAIH,UAAJ,EAAnB;AACAG,MAAAA,UAAU,CAACC,gBAAX,GAA8BC,IAA9B,CAAmC,UAACC,IAAD,EAAe;AAChD,YAAIC,IAAI,GAAG,EAAX;AADgD;AAAA;AAAA;;AAAA;AAEhD,4CAAkBD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,EAAd,CAAlB,4GAAqC;AAAA,gBAA3BC,IAA2B;AACnCF,YAAAA,IAAI,CAACG,IAAL,CACE;AAAK,cAAA,GAAG,EAAED,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGZ,MAAM,CAACU,IAAI,CAACE,EAAN,CAAN,CAAgBC,MAAhB,CAAuB,OAAvB,CADH,EACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADnC,EAEE;AAAK,cAAA,GAAG,EAAEH,IAAI,CAACI,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAEwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFxB,EAGGJ,IAAI,CAACK,IAHR,UAGc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHd,EAIGL,IAAI,CAACM,IAJR,EAIa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJb,CADF;AAQD;AAX+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYhD,QAAA,MAAI,CAACC,QAAL,CAAc;AAACd,UAAAA,aAAa,EAAEK;AAAhB,SAAd;AACD,OAbD;AAcD;;;wCAEmB;AAClB,WAAKU,gBAAL;AACD;;;8CAEyBC,S,EAAgB;AACxC,UAAGA,SAAS,CAACC,OAAV,IAAqB,IAAxB,EAA8B;AAC5B,aAAKF,gBAAL;AACD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,KAAL,CAAWlB,aADd,CADF;AAKD;;;;EAvCyBJ,KAAK,CAACuB,S;;AA0ClC,eAAepB,aAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport { WeatherAPI } from 'lib/weather';\n\ninterface HourlyWeatherProps {\n  refresh: boolean\n}\n\nclass HourlyWeather extends React.Component<HourlyWeatherProps> {\n  state = {\n    hourlyWeather: []\n  };\n\n  setHourlyWeather() {\n    const weatherAPI = new WeatherAPI();\n    weatherAPI.getHourlyWeather().then((list: any) => {\n      let html = [];\n      for(const data of list.slice(0, 10)) {\n        html.push(\n          <div key={data.dt}>\n            {moment(data.dt).format('HH:mm')}<br/>\n            <img src={data.icon}/><br/>\n            {data.temp}Â°<br/>\n            {data.main}<br/>\n          </div>\n        );\n      }\n      this.setState({hourlyWeather: html});\n    });\n  }\n\n  componentDidMount() {\n    this.setHourlyWeather();\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    if(nextProps.refresh == true) {\n      this.setHourlyWeather();\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"hourly_weather\">\n        {this.state.hourlyWeather}\n      </div>\n    );\n  }\n}\n\nexport default HourlyWeather;\n"]},"metadata":{},"sourceType":"module"}