{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yjh/Documents/React/easyway/components/pages/list.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport Modal from 'components/modal';\nimport { BusUI, BusAPI } from 'lib/bus';\nimport { WeatherAPI } from 'lib/weather';\nimport { SubwayUI, SubwayAPI } from 'lib/subway';\nimport { Interval } from 'lib/common';\n\nvar List = /*#__PURE__*/function (_React$Component) {\n  _inherits(List, _React$Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_ismounted\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currentTime: '',\n      currentWeather: __jsx(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }\n      }),\n      buses: [],\n      subways: [],\n      ad: []\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"setCurrentTime\",\n    value: function setCurrentTime() {\n      var _this2 = this;\n\n      var interval = new Interval();\n      interval.set(function () {\n        if (_this2._ismounted) {\n          _this2.setState({\n            currentTime: moment().format('HH:mm:ss')\n          });\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"setCurrentWeather\",\n    value: function setCurrentWeather() {\n      var _this3 = this;\n\n      var weatherAPI = new WeatherAPI();\n      weatherAPI.getCurrentWeather().then(function (data) {\n        if (_this3._ismounted) {\n          _this3.setState({\n            currentWeather: __jsx(\"div\", {\n              id: \"current_weather\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 11\n              }\n            }, __jsx(\"div\", {\n              id: \"current_weather_title\",\n              className: \"list\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 13\n              }\n            }, __jsx(\"div\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 15\n              }\n            }, __jsx(\"img\", {\n              src: data.icon,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 20\n              }\n            })), __jsx(\"div\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }\n            }, __jsx(\"p\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 20\n              }\n            }, data.temp, \"\\xB0\"))), __jsx(\"p\", {\n              id: \"current_weather_main\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 13\n              }\n            }, data.main), __jsx(\"p\", {\n              id: \"current_weather_desc\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 13\n              }\n            }, data.desc), __jsx(\"div\", {\n              id: \"current_weather_more\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 13\n              }\n            }, __jsx(\"img\", {\n              src: \"/static/img/plus_btn_01.svg\",\n              onClick: Modal.active,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }\n            })))\n          });\n        }\n      });\n    }\n  }, {\n    key: \"setCurrentBus\",\n    value: function setCurrentBus() {\n      var _this4 = this;\n\n      var api = new BusAPI();\n      api.getBuses(this.props.token).then(function (data) {\n        var arr = [];\n\n        var _iterator = _createForOfIteratorHelper(data),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var bus = _step.value;\n            var key = \"\".concat(bus.station_id).concat(bus.bus_route_id);\n            arr.push(__jsx(\"div\", {\n              className: \"current_bus\",\n              key: key,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 11\n              }\n            }, __jsx(\"p\", {\n              className: \"current_bus_title\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 13\n              }\n            }, bus.name), __jsx(\"p\", {\n              className: \"current_bus_message\",\n              id: key,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }\n            })));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        _this4.setState({\n          'buses': arr\n        });\n\n        var _iterator2 = _createForOfIteratorHelper(data),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _bus = _step2.value;\n\n            var _key2 = \"\".concat(_bus.station_id).concat(_bus.bus_route_id);\n\n            var target = $(\"#\".concat(_key2));\n            BusUI.setCurrentBus(target, _bus.station_id, _bus.bus_route_id, _bus.ord);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      });\n    }\n  }, {\n    key: \"setCurrentSubway\",\n    value: function setCurrentSubway() {\n      var _this5 = this;\n\n      var subways = {};\n      var api = new SubwayAPI();\n      api.getSubways(this.props.token).then(function (data) {\n        var trainLineNameCnt = 0;\n\n        var _iterator3 = _createForOfIteratorHelper(data),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var subway = _step3.value;\n            subways[subway.station_name] = {};\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        var _iterator4 = _createForOfIteratorHelper(data),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _subway = _step4.value;\n\n            if (subways[_subway.station_name][_subway.direction]) {\n              subways[_subway.station_name][_subway.direction].push(_subway.train_line_name);\n            } else {\n              subways[_subway.station_name][_subway.direction] = [_subway.train_line_name];\n            }\n\n            trainLineNameCnt += 1;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        var arr = [];\n\n        for (var stationName in subways) {\n          for (var direction in subways[stationName]) {\n            var _iterator5 = _createForOfIteratorHelper(subways[stationName][direction]),\n                _step5;\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var trainLineName = _step5.value;\n\n                if (trainLineNameCnt > 2) {\n                  arr.push(__jsx(\"div\", {\n                    key: trainLineName,\n                    className: \"current_subway\",\n                    __self: _this5,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 17\n                    }\n                  }, __jsx(\"div\", {\n                    className: \"current_subway_title\",\n                    __self: _this5,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 19\n                    }\n                  }, trainLineName), __jsx(\"div\", {\n                    className: \"current_subway_message\",\n                    id: trainLineName.replace(/\\s/gi, \"\"),\n                    __self: _this5,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 19\n                    }\n                  })));\n                } else {\n                  arr.push(__jsx(\"div\", {\n                    key: trainLineName,\n                    className: \"current_subway_solo\",\n                    __self: _this5,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 17\n                    }\n                  }, __jsx(\"div\", {\n                    className: \"current_subway_solo_title\",\n                    __self: _this5,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 19\n                    }\n                  }, trainLineName), __jsx(\"div\", {\n                    className: \"current_subway_solo_message\",\n                    id: trainLineName.replace(/\\s/gi, \"\"),\n                    __self: _this5,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 19\n                    }\n                  })));\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n        }\n\n        if (arr.length > 2) {\n          _this5.setState({\n            'subways': __jsx(\"div\", {\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 36\n              }\n            }, arr)\n          });\n        } else {\n          _this5.setState({\n            'subways': arr\n          });\n        }\n\n        for (var _stationName in subways) {\n          for (var _direction in subways[_stationName]) {\n            var _iterator6 = _createForOfIteratorHelper(subways[_stationName][_direction]),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var _trainLineName = _step6.value;\n                var target = $(\"#\".concat(_trainLineName.replace(/\\s/gi, \"\")));\n                SubwayUI.setCurrentSubway(target, _stationName, _trainLineName);\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"setAd\",\n    value: function setAd() {\n      var len = this.state.buses.length + this.state.subways.length;\n      console.log(len);\n      var arr = [];\n\n      if (len % 2 == 1) {\n        arr.push(__jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }\n        }, __jsx(\"ins\", {\n          className: \"kakao_ad_area\",\n          style: {\n            display: 'block'\n          },\n          \"data-ad-unit\": \"DAN-t4hvx5l5jzg7\",\n          \"data-ad-width\": \"250\",\n          \"data-ad-height\": \"250\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }\n        })));\n      } else {\n        arr.push(__jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 9\n          }\n        }, __jsx(\"ins\", {\n          className: \"kakao_ad_area\",\n          style: {\n            display: 'block'\n          },\n          \"data-ad-unit\": \"DAN-t4hvx5l5jzg7\",\n          \"data-ad-width\": \"250\",\n          \"data-ad-height\": \"250\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }\n        })));\n        arr.push(__jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }\n        }, __jsx(\"ins\", {\n          className: \"kakao_ad_area\",\n          style: {\n            display: 'block'\n          },\n          \"data-ad-unit\": \"DAN-1jeytlnp9dtti\",\n          \"data-ad-width\": \"250\",\n          \"data-ad-height\": \"250\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }\n        })));\n      }\n\n      this.setState({\n        'ad': arr\n      });\n    }\n  }, {\n    key: \"setAll\",\n    value: function setAll() {\n      this.setCurrentTime();\n      this.setCurrentWeather();\n      this.setCurrentBus();\n      this.setCurrentSubway();\n      this.setAd();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._ismounted = true;\n      this.setAll();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._ismounted = false;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.refresh == true) {\n        this.setAll();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"inner-content\",\n        id: \"list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        id: \"current_time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }, this.state.currentTime)), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }, this.state.currentWeather), this.state.buses, this.state.subways, this.state.ad)));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/components/pages/list.tsx"],"names":["React","moment","$","Modal","BusUI","BusAPI","WeatherAPI","SubwayUI","SubwayAPI","Interval","List","currentTime","currentWeather","buses","subways","ad","interval","set","_ismounted","setState","format","weatherAPI","getCurrentWeather","then","data","icon","temp","main","desc","active","api","getBuses","props","token","arr","bus","key","station_id","bus_route_id","push","name","target","setCurrentBus","ord","getSubways","trainLineNameCnt","subway","station_name","direction","train_line_name","stationName","trainLineName","replace","length","setCurrentSubway","len","state","console","log","display","setCurrentTime","setCurrentWeather","setAd","setAll","nextProps","refresh","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\n\nimport Modal from 'components/modal';\nimport { BusUI, BusAPI } from 'lib/bus';\nimport { WeatherAPI } from 'lib/weather';\nimport { SubwayUI, SubwayAPI } from 'lib/subway';\nimport { Interval } from 'lib/common';\n\ninterface ListProps {\n  refresh: boolean,\n  token: string\n}\n\ninterface ListStates {\n  currentTime: string,\n  currentWeather: JSX.Element,\n  buses: JSX.Element[],\n  subways: any,\n  ad: JSX.Element[]\n}\n\nclass List extends React.Component<ListProps, ListStates> {\n  _ismounted: boolean = true;\n\n  state = {\n    currentTime: '',\n    currentWeather: (<div></div>),\n    buses: [],\n    subways: [],\n    ad: []\n  };\n\n  setCurrentTime() {\n    const interval = new Interval();\n    interval.set(() => {\n      if(this._ismounted) {\n        this.setState({currentTime: moment().format('HH:mm:ss')});\n      }\n    }, 1000);\n  }\n\n  setCurrentWeather() {\n    const weatherAPI = new WeatherAPI();\n    weatherAPI.getCurrentWeather().then((data: any) => {\n      if(this._ismounted) {\n        this.setState({currentWeather: (\n          <div id=\"current_weather\">\n            <div id=\"current_weather_title\" className=\"list\">\n              <div><img src={data.icon}/></div>\n              <div><p>{data.temp}°</p></div>\n            </div>\n            <p id=\"current_weather_main\">{data.main}</p>\n            <p id=\"current_weather_desc\">{data.desc}</p>\n            <div id=\"current_weather_more\">\n              <img src=\"/static/img/plus_btn_01.svg\" onClick={Modal.active}/>\n            </div>\n          </div>\n        )});\n      }\n    });\n  }\n\n  setCurrentBus() {\n    const api = new BusAPI();\n    api.getBuses(this.props.token).then(data => {\n      let arr: JSX.Element[] = [];\n      for(let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        arr.push(\n          <div className=\"current_bus\" key={key}>\n            <p className=\"current_bus_title\">{bus.name}</p>\n            <p className=\"current_bus_message\" id={key}></p>\n          </div>\n        )\n      }\n      this.setState({'buses': arr});\n      \n      for(let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        const target = $(`#${key}`);\n        BusUI.setCurrentBus(target, bus.station_id, bus.bus_route_id, bus.ord);\n      }\n    });\n  }\n\n  setCurrentSubway() {\n    let subways: any = {};\n    const api = new SubwayAPI();\n    api.getSubways(this.props.token).then(data => {\n      let trainLineNameCnt = 0;\n\n      for(let subway of data) {\n        subways[subway.station_name] = {}\n      }\n      for(let subway of data) {\n        if(subways[subway.station_name][subway.direction]) {\n          subways[subway.station_name][subway.direction].push(\n            subway.train_line_name\n          );\n        } else {\n          subways[subway.station_name][subway.direction] = [\n            subway.train_line_name\n          ];\n        }\n        trainLineNameCnt += 1;\n      }\n      \n      let arr: JSX.Element[] = []\n      for(let stationName in subways) {\n        for(let direction in subways[stationName]) {\n          for(let trainLineName of subways[stationName][direction]) {\n            if(trainLineNameCnt > 2) {\n              arr.push(\n                <div key={trainLineName} className=\"current_subway\">\n                  <div className=\"current_subway_title\">{trainLineName}</div>\n                  <div className=\"current_subway_message\" id={trainLineName.replace(/\\s/gi, \"\")}></div>\n                </div>\n              );\n            } else {\n              arr.push(\n                <div key={trainLineName} className=\"current_subway_solo\">\n                  <div className=\"current_subway_solo_title\">{trainLineName}</div>\n                  <div className=\"current_subway_solo_message\" id={trainLineName.replace(/\\s/gi, \"\")}></div>\n                </div>\n              );\n            }\n          }\n        }\n      }\n      if(arr.length > 2) {\n        this.setState({'subways': (<div>{arr}</div>)});\n      } else {\n        this.setState({'subways': arr});\n      }\n\n      for(let stationName in subways) {\n        for(let direction in subways[stationName]) {\n          for(let trainLineName of subways[stationName][direction]) {\n            const target = $(`#${trainLineName.replace(/\\s/gi, \"\")}`);\n            SubwayUI.setCurrentSubway(target, stationName, trainLineName);\n          }\n        }\n      }\n    });\n  }\n\n  setAd() {\n    const len = this.state.buses.length + this.state.subways.length;\n    console.log(len)\n    const arr: any = [];\n    if(len % 2 == 1) {\n      arr.push(\n        <div>\n          <ins className=\"kakao_ad_area\" style={{display: 'block'}} \n            data-ad-unit    = \"DAN-t4hvx5l5jzg7\" \n            data-ad-width   = \"250\" \n            data-ad-height  = \"250\"></ins>\n        </div>\n      )\n    } else {\n      arr.push(\n        <div>\n          <ins className=\"kakao_ad_area\" style={{display: 'block'}} \n            data-ad-unit    = \"DAN-t4hvx5l5jzg7\" \n            data-ad-width   = \"250\" \n            data-ad-height  = \"250\"></ins>\n        </div>\n      )\n      arr.push(\n        <div>\n          <ins className=\"kakao_ad_area\" style={{display: 'block'}} \n            data-ad-unit    = \"DAN-1jeytlnp9dtti\" \n            data-ad-width   = \"250\" \n            data-ad-height  = \"250\"></ins>\n        </div>\n      )\n    }\n    this.setState({'ad': arr})\n  }\n\n  setAll() {\n    this.setCurrentTime();\n    this.setCurrentWeather();\n    this.setCurrentBus();\n    this.setCurrentSubway();\n    this.setAd();\n  }\n\n  componentDidMount() {\n    this._ismounted = true;\n    this.setAll();\n  }\n  \n  componentWillUnmount() {\n     this._ismounted = false;\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    if(nextProps.refresh == true) {\n      this.setAll();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"inner-content\" id=\"list\">\n          <div className=\"list\">\n            <div>\n              <p id=\"current_time\">{this.state.currentTime}</p>\n            </div>\n\n            <div>{this.state.currentWeather}</div>\n\n            {this.state.buses}\n\n            {this.state.subways}\n\n            {this.state.ad}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}