{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport $ from 'jquery';\nimport { BusAPI } from 'lib/bus';\nimport { SubwayAPI } from 'lib/subway';\n\nvar Settings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Settings, _React$Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      busStation: [],\n      busRoute: [],\n      busRouteChoice: [],\n      subwayLine: [],\n      subwayLineChoice: []\n    });\n\n    _this.setBusStation = _this.setBusStation.bind(_assertThisInitialized(_this));\n    _this.setBusRoute = _this.setBusRoute.bind(_assertThisInitialized(_this));\n    _this.addBusRoute = _this.addBusRoute.bind(_assertThisInitialized(_this));\n    _this.removeBusRoute = _this.removeBusRoute.bind(_assertThisInitialized(_this));\n    _this.setSubwayLine = _this.setSubwayLine.bind(_assertThisInitialized(_this));\n    _this.addSubwayLine = _this.addSubwayLine.bind(_assertThisInitialized(_this));\n    _this.removeSubwayLine = _this.removeSubwayLine.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setBuses();\n      this.setSubways();\n    }\n  }, {\n    key: \"setBuses\",\n    value: function setBuses() {\n      var _this2 = this;\n\n      var arr = this.state.busRouteChoice;\n      var api = new BusAPI();\n      api.getBuses(this.props.token).then(function (data) {\n        var _iterator = _createForOfIteratorHelper(data),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var bus = _step.value;\n            var key = \"\".concat(bus.station_id).concat(bus.bus_route_id);\n            arr.push(__jsx(\"li\", {\n              key: key,\n              \"data-id\": bus.id,\n              \"data-st-id\": bus.station_id,\n              \"data-busroute-id\": bus.bus_route_id,\n              \"data-ord\": bus.ord,\n              \"data-rtnm\": bus.name\n            }, bus.name, __jsx(\"img\", {\n              src: \"/static/img/plus_btn_01.svg\",\n              onClick: _this2.removeBusRoute\n            })));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        _this2.setState({\n          'busRouteChoice': arr\n        });\n      });\n    }\n  }, {\n    key: \"removeBusRoute\",\n    value: function removeBusRoute(event) {\n      var _this3 = this;\n\n      var target = $(event.target).closest('li');\n      var key = \"\".concat(target.data('st-id')).concat(target.data('busroute-id'));\n      var arr = this.state.busRouteChoice.filter(function (value) {\n        return value.key != key;\n      });\n      var api = new BusAPI();\n      api.deleteBus(target.data('id'), this.props.token).then(function (data) {\n        _this3.setState({\n          'busRouteChoice': arr\n        });\n      });\n    }\n  }, {\n    key: \"addBusRoute\",\n    value: function addBusRoute(event) {\n      var _this4 = this;\n\n      var target = $(event.target).closest('div').prev();\n      var key = \"\".concat(target.data('st-id')).concat(target.data('busroute-id'));\n      var arr = this.state.busRouteChoice;\n      var alreadyFlag = false;\n\n      var _iterator2 = _createForOfIteratorHelper(arr),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var value = _step2.value;\n\n          if (value.key == key) {\n            alreadyFlag = true;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (alreadyFlag) {\n        return;\n      }\n\n      if (arr.length > 2) {\n        return;\n      }\n\n      var name = target.data('rtnm');\n      var stId = target.data('st-id');\n      var busRouteId = target.data('busroute-id');\n      var ord = target.data('ord');\n      var adirection = target.data('adirection');\n      var api = new BusAPI();\n      api.createBus(name, stId, busRouteId, ord, this.props.token).then(function (data) {\n        arr.push(__jsx(\"li\", {\n          key: key,\n          \"data-id\": data.id,\n          \"data-st-id\": stId,\n          \"data-busroute-id\": busRouteId,\n          \"data-ord\": ord,\n          \"data-rtnm\": name,\n          \"data-adirection\": adirection\n        }, name, __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: _this4.removeBusRoute\n        })));\n\n        _this4.setState({\n          'busRouteChoice': arr\n        });\n      });\n    }\n  }, {\n    key: \"setBusRoute\",\n    value: function setBusRoute(event) {\n      var _this5 = this;\n\n      this.setState({\n        'busStation': []\n      });\n      var arsId = $(event.target).data('ars-id');\n      var api = new BusAPI();\n      api.getBusRoute(arsId).then(function (data) {\n        data = Array.isArray(data) ? data : [data];\n        var arr = [];\n\n        for (var i in data) {\n          arr.push(__jsx(\"div\", {\n            key: i\n          }, __jsx(\"div\", {\n            \"data-st-id\": data[i].stId,\n            \"data-busroute-id\": data[i].busRouteId,\n            \"data-ord\": data[i].staOrd,\n            \"data-rtnm\": data[i].rtNm,\n            \"data-adirection\": data[i].adirection\n          }, data[i].rtNm, \":\", data[i].adirection), __jsx(\"div\", null, __jsx(\"img\", {\n            src: \"/static/img/plus_btn_01.svg\",\n            onClick: _this5.addBusRoute\n          }))));\n        }\n\n        _this5.setState({\n          'busRoute': arr\n        });\n      });\n    }\n  }, {\n    key: \"setBusStation\",\n    value: function setBusStation(event) {\n      var _this6 = this;\n\n      var name = event.target.value;\n\n      if (name.length < 2) {\n        return;\n      }\n\n      var api = new BusAPI();\n      api.getBusStation(name).then(function (data) {\n        data = data ? data.slice(0, 5) : undefined;\n        var arr = [];\n\n        for (var i in data) {\n          arr.push(__jsx(\"li\", {\n            key: i,\n            \"data-ars-id\": data[i].arsId,\n            onClick: _this6.setBusRoute\n          }, data[i].stNm));\n        }\n\n        _this6.setState({\n          'busStation': arr\n        });\n      });\n    }\n  }, {\n    key: \"removeSubwayLine\",\n    value: function removeSubwayLine(event) {\n      var _this7 = this;\n\n      var target = $(event.target).closest('li');\n      var key = target.data('train-line-nm');\n      var arr = this.state.subwayLineChoice.filter(function (value) {\n        return value.key != key;\n      });\n      var api = new SubwayAPI();\n      api.deleteSubway(target.data('id'), this.props.token).then(function (data) {\n        _this7.setState({\n          'subwayLineChoice': arr\n        });\n      });\n    }\n  }, {\n    key: \"addSubwayLine\",\n    value: function addSubwayLine(event) {\n      var _this8 = this;\n\n      var target = $(event.target).closest('div').prev();\n      var key = target.data('train-line-nm');\n      var arr = this.state.subwayLineChoice;\n      var alreadyFlag = false;\n\n      var _iterator3 = _createForOfIteratorHelper(arr),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var value = _step3.value;\n\n          if (value.key == key) {\n            alreadyFlag = true;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (alreadyFlag) {\n        return;\n      }\n\n      if (arr.length > 5) {\n        return;\n      }\n\n      var stationName = target.data('statn-nm');\n      var direction = target.data('updn-line');\n      var trainLineName = target.data('train-line-nm');\n      var api = new SubwayAPI();\n      api.createSubway(stationName, direction, trainLineName, this.props.token).then(function (data) {\n        arr.push(__jsx(\"li\", {\n          key: key,\n          \"data-id\": data.id,\n          \"data-updn-line\": direction,\n          \"data-statn-nm\": stationName,\n          \"data-train-line-nm\": trainLineName\n        }, trainLineName.split(' - ')[0], __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: _this8.removeSubwayLine\n        })));\n\n        _this8.setState({\n          'subwayLineChoice': arr\n        });\n      });\n    }\n  }, {\n    key: \"setSubways\",\n    value: function setSubways() {\n      var _this9 = this;\n\n      var arr = this.state.subwayLineChoice;\n      var api = new SubwayAPI();\n      api.getSubways(this.props.token).then(function (data) {\n        var _iterator4 = _createForOfIteratorHelper(data),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var subway = _step4.value;\n            var key = subway.train_line_name;\n            arr.push(__jsx(\"li\", {\n              key: key,\n              \"data-id\": subway.id,\n              \"data-updn-line\": subway.direction,\n              \"data-statn-nm\": subway.station_name,\n              \"data-train-line-nm\": subway.train_line_name\n            }, subway.train_line_name.split(' - ')[0], __jsx(\"img\", {\n              src: \"/static/img/plus_btn_01.svg\",\n              onClick: _this9.removeSubwayLine\n            })));\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        _this9.setState({\n          'subwayLineChoice': arr\n        });\n      });\n    }\n  }, {\n    key: \"setSubwayLine\",\n    value: function setSubwayLine(event) {\n      var _this10 = this;\n\n      this.setState({\n        'subwayLine': []\n      });\n      var name = event.target.value;\n\n      if (name.length < 2) {\n        return;\n      }\n\n      var api = new SubwayAPI();\n      api.getCurrentSubway(name).then(function (data) {\n        var arr = [];\n        var dict = {};\n\n        for (var i in data) {\n          dict[data[i].trainLineNm] = i;\n        }\n\n        for (var _i in dict) {\n          var j = dict[_i];\n          arr.push(__jsx(\"div\", {\n            key: j\n          }, __jsx(\"div\", {\n            \"data-updn-line\": data[j].updnLine,\n            \"data-statn-nm\": data[j].statnNm,\n            \"data-train-line-nm\": data[j].trainLineNm\n          }, data[j].trainLineNm), __jsx(\"div\", null, __jsx(\"img\", {\n            src: \"/static/img/plus_btn_01.svg\",\n            onClick: _this10.addSubwayLine\n          }))));\n        }\n\n        _this10.setState({\n          'subwayLine': arr\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"list\"\n      }, __jsx(\"div\", null, __jsx(\"input\", {\n        type: \"text\",\n        id: \"search-bus-station\",\n        onChange: this.setBusStation,\n        onFocus: this.setBusStation,\n        placeholder: \"\\uC815\\uB958\\uC18C\\uBA85\"\n      }), __jsx(\"ul\", {\n        id: \"search-bus-station-result\"\n      }, this.state.busStation), __jsx(\"div\", {\n        id: \"bus-route-result\"\n      }, this.state.busRoute), __jsx(\"ul\", {\n        id: \"bus-route-choice\"\n      }, this.state.busRouteChoice)), __jsx(\"div\", null, __jsx(\"input\", {\n        type: \"text\",\n        id: \"search-subway-station\",\n        onChange: this.setSubwayLine,\n        onFocus: this.setSubwayLine,\n        placeholder: \"\\uC9C0\\uD558\\uCCA0\\uC5ED\\uBA85(\\uC5ED\\uC81C\\uC678)\"\n      }), __jsx(\"div\", {\n        id: \"subway-line-result\"\n      }, this.state.subwayLine), __jsx(\"ul\", {\n        id: \"subway-line-choice\"\n      }, this.state.subwayLineChoice)));\n    }\n  }]);\n\n  return Settings;\n}(React.Component);\n\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}