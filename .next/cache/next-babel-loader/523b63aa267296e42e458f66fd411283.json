{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport Modal from 'components/modal';\nimport { BusUI, BusAPI } from 'lib/bus';\nimport { WeatherAPI } from 'lib/weather';\nimport { SubwayUI, SubwayAPI } from 'lib/subway';\nimport { Interval } from 'lib/common';\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_ismounted\", true);\n\n    _defineProperty(this, \"state\", {\n      currentTime: '',\n      currentWeather: __jsx(\"div\", null),\n      buses: [],\n      subways: []\n    });\n  }\n\n  setCurrentTime() {\n    const interval = new Interval();\n    interval.set(() => {\n      if (this._ismounted) {\n        this.setState({\n          currentTime: moment().format('HH:mm:ss')\n        });\n      }\n    }, 1000);\n  }\n\n  setCurrentWeather() {\n    const weatherAPI = new WeatherAPI();\n    weatherAPI.getCurrentWeather().then(data => {\n      if (this._ismounted) {\n        this.setState({\n          currentWeather: __jsx(\"div\", {\n            id: \"current_weather\"\n          }, __jsx(\"div\", {\n            id: \"current_weather_title\",\n            className: \"list\"\n          }, __jsx(\"div\", null, __jsx(\"img\", {\n            src: data.icon\n          })), __jsx(\"div\", null, __jsx(\"p\", null, data.temp, \"\\xB0\"))), __jsx(\"p\", {\n            id: \"current_weather_main\"\n          }, data.main), __jsx(\"p\", {\n            id: \"current_weather_desc\"\n          }, data.desc), __jsx(\"div\", {\n            id: \"current_weather_more\"\n          }, __jsx(\"img\", {\n            src: \"/static/img/plus_btn_01.svg\",\n            onClick: Modal.active\n          })))\n        });\n      }\n    });\n  }\n\n  setCurrentBus() {\n    const api = new BusAPI();\n    api.getBuses(this.props.token).then(data => {\n      let arr = [];\n\n      for (let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        arr.push(__jsx(\"div\", {\n          className: \"current_bus\",\n          key: key\n        }, __jsx(\"p\", {\n          className: \"current_bus_title\"\n        }, bus.name), __jsx(\"p\", {\n          className: \"current_bus_message\",\n          id: key\n        })));\n      }\n\n      this.setState({\n        'buses': arr\n      });\n\n      for (let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        const target = $(`#${key}`);\n        BusUI.setCurrentBus(target, bus.station_id, bus.bus_route_id, bus.ord);\n      }\n    });\n  }\n\n  setCurrentSubway() {\n    let subways = {};\n    const api = new SubwayAPI();\n    api.getSubways(this.props.token).then(data => {\n      let trainLineNameCnt = 0;\n\n      for (let subway of data) {\n        subways[subway.station_name] = {};\n      }\n\n      for (let subway of data) {\n        if (subways[subway.station_name][subway.direction]) {\n          subways[subway.station_name][subway.direction].push(subway.train_line_name);\n        } else {\n          subways[subway.station_name][subway.direction] = [subway.train_line_name];\n        }\n\n        trainLineNameCnt += 1;\n      }\n\n      let arr = [];\n\n      for (let stationName in subways) {\n        for (let direction in subways[stationName]) {\n          for (let trainLineName of subways[stationName][direction]) {\n            if (trainLineNameCnt > 2) {\n              arr.push(__jsx(\"div\", {\n                key: trainLineName,\n                className: \"current_subway\"\n              }, __jsx(\"div\", {\n                className: \"current_subway_title\"\n              }, trainLineName), __jsx(\"div\", {\n                className: \"current_subway_message\",\n                id: trainLineName.replace(/\\s/gi, \"\")\n              })));\n            } else {\n              arr.push(__jsx(\"div\", {\n                key: trainLineName,\n                className: \"current_subway_solo\"\n              }, __jsx(\"div\", {\n                className: \"current_subway_solo_title\"\n              }, trainLineName), __jsx(\"div\", {\n                className: \"current_subway_solo_message\",\n                id: trainLineName.replace(/\\s/gi, \"\")\n              })));\n            }\n          }\n        }\n      }\n\n      if (arr.length > 2) {\n        this.setState({\n          'subways': __jsx(\"div\", null, arr)\n        });\n      } else {\n        this.setState({\n          'subways': arr\n        });\n      }\n\n      for (let stationName in subways) {\n        for (let direction in subways[stationName]) {\n          for (let trainLineName of subways[stationName][direction]) {\n            const target = $(`#${trainLineName.replace(/\\s/gi, \"\")}`);\n            SubwayUI.setCurrentSubway(target, stationName, trainLineName);\n          }\n        }\n      }\n    });\n  }\n\n  setAll() {\n    this.setCurrentTime();\n    this.setCurrentWeather();\n    this.setCurrentBus();\n    this.setCurrentSubway();\n  }\n\n  componentDidMount() {\n    this._ismounted = true;\n    this.setAll();\n  }\n\n  componentWillUnmount() {\n    this._ismounted = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.refresh == true) {\n      this.setAll();\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"content\"\n    }, __jsx(\"div\", {\n      className: \"inner-content\",\n      id: \"list\"\n    }, __jsx(\"div\", {\n      className: \"list\"\n    }, __jsx(\"div\", null, __jsx(\"p\", {\n      id: \"current_time\"\n    }, this.state.currentTime)), __jsx(\"div\", null, this.state.currentWeather), this.state.buses, this.state.subways)));\n  }\n\n}\n\nexport default List;","map":null,"metadata":{},"sourceType":"module"}