{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport $ from 'jquery';\nimport { BusAPI } from 'lib/bus';\nimport { SubwayAPI } from 'lib/subway';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      busStation: [],\n      busRoute: [],\n      busRouteChoice: [],\n      subwayLine: [],\n      subwayLineChoice: []\n    });\n\n    this.setBusStation = this.setBusStation.bind(this);\n    this.setBusRoute = this.setBusRoute.bind(this);\n    this.addBusRoute = this.addBusRoute.bind(this);\n    this.removeBusRoute = this.removeBusRoute.bind(this);\n    this.setSubwayLine = this.setSubwayLine.bind(this);\n    this.addSubwayLine = this.addSubwayLine.bind(this);\n    this.removeSubwayLine = this.removeSubwayLine.bind(this);\n  }\n\n  componentDidMount() {\n    this.setBuses();\n    this.setSubways();\n  }\n\n  setBuses() {\n    let arr = this.state.busRouteChoice;\n    const api = new BusAPI();\n    api.getBuses(this.props.token).then(data => {\n      for (let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        arr.push(__jsx(\"li\", {\n          key: key,\n          \"data-id\": bus.id,\n          \"data-st-id\": bus.station_id,\n          \"data-busroute-id\": bus.bus_route_id,\n          \"data-ord\": bus.ord,\n          \"data-rtnm\": bus.name\n        }, bus.name, __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: this.removeBusRoute\n        })));\n      }\n\n      this.setState({\n        'busRouteChoice': arr\n      });\n    });\n  }\n\n  removeBusRoute(event) {\n    const target = $(event.target).closest('li');\n    const key = `${target.data('st-id')}${target.data('busroute-id')}`;\n    let arr = this.state.busRouteChoice.filter(value => {\n      return value.key != key;\n    });\n    const api = new BusAPI();\n    api.deleteBus(target.data('id'), this.props.token).then(data => {\n      this.setState({\n        'busRouteChoice': arr\n      });\n    });\n  }\n\n  addBusRoute(event) {\n    const target = $(event.target).closest('div').prev();\n    const key = `${target.data('st-id')}${target.data('busroute-id')}`;\n    let arr = this.state.busRouteChoice;\n    let alreadyFlag = false;\n\n    for (let value of arr) {\n      if (value.key == key) {\n        alreadyFlag = true;\n      }\n    }\n\n    if (alreadyFlag) {\n      return;\n    }\n\n    if (arr.length > 2) {\n      return;\n    }\n\n    const name = target.data('rtnm');\n    const stId = target.data('st-id');\n    const busRouteId = target.data('busroute-id');\n    const ord = target.data('ord');\n    const adirection = target.data('adirection');\n    const api = new BusAPI();\n    api.createBus(name, stId, busRouteId, ord, this.props.token).then(data => {\n      arr.push(__jsx(\"li\", {\n        key: key,\n        \"data-id\": data.id,\n        \"data-st-id\": stId,\n        \"data-busroute-id\": busRouteId,\n        \"data-ord\": ord,\n        \"data-rtnm\": name,\n        \"data-adirection\": adirection\n      }, name, __jsx(\"img\", {\n        src: \"/static/img/plus_btn_01.svg\",\n        onClick: this.removeBusRoute\n      })));\n      this.setState({\n        'busRouteChoice': arr\n      });\n    });\n  }\n\n  setBusRoute(event) {\n    this.setState({\n      'busStation': []\n    });\n    const arsId = $(event.target).data('ars-id');\n    const api = new BusAPI();\n    api.getBusRoute(arsId).then(data => {\n      data = Array.isArray(data) ? data : [data];\n      const arr = [];\n\n      for (let i in data) {\n        arr.push(__jsx(\"div\", {\n          key: i\n        }, __jsx(\"div\", {\n          \"data-st-id\": data[i].stId,\n          \"data-busroute-id\": data[i].busRouteId,\n          \"data-ord\": data[i].staOrd,\n          \"data-rtnm\": data[i].rtNm,\n          \"data-adirection\": data[i].adirection\n        }, data[i].rtNm, \":\", data[i].adirection), __jsx(\"div\", null, __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: this.addBusRoute\n        }))));\n      }\n\n      this.setState({\n        'busRoute': arr\n      });\n    });\n  }\n\n  setBusStation(event) {\n    const name = event.target.value;\n\n    if (name.length < 2) {\n      return;\n    }\n\n    const api = new BusAPI();\n    api.getBusStation(name).then(data => {\n      data = data ? data.slice(0, 5) : undefined;\n      const arr = [];\n\n      for (let i in data) {\n        arr.push(__jsx(\"li\", {\n          key: i,\n          \"data-ars-id\": data[i].arsId,\n          onClick: this.setBusRoute\n        }, data[i].stNm));\n      }\n\n      this.setState({\n        'busStation': arr\n      });\n    });\n  }\n\n  removeSubwayLine(event) {\n    const target = $(event.target).closest('li');\n    const key = target.data('train-line-nm');\n    let arr = this.state.subwayLineChoice.filter(value => {\n      return value.key != key;\n    });\n    const api = new SubwayAPI();\n    api.deleteSubway(target.data('id'), this.props.token).then(data => {\n      this.setState({\n        'subwayLineChoice': arr\n      });\n    });\n  }\n\n  addSubwayLine(event) {\n    const target = $(event.target).closest('div').prev();\n    const key = target.data('train-line-nm');\n    let arr = this.state.subwayLineChoice;\n    let alreadyFlag = false;\n\n    for (let value of arr) {\n      if (value.key == key) {\n        alreadyFlag = true;\n      }\n    }\n\n    if (alreadyFlag) {\n      return;\n    }\n\n    if (arr.length > 5) {\n      return;\n    }\n\n    const stationName = target.data('statn-nm');\n    const direction = target.data('updn-line');\n    const trainLineName = target.data('train-line-nm');\n    const api = new SubwayAPI();\n    api.createSubway(stationName, direction, trainLineName, this.props.token).then(data => {\n      arr.push(__jsx(\"li\", {\n        key: key,\n        \"data-id\": data.id,\n        \"data-updn-line\": direction,\n        \"data-statn-nm\": stationName,\n        \"data-train-line-nm\": trainLineName\n      }, trainLineName.split(' - ')[0], __jsx(\"img\", {\n        src: \"/static/img/plus_btn_01.svg\",\n        onClick: this.removeSubwayLine\n      })));\n      this.setState({\n        'subwayLineChoice': arr\n      });\n    });\n  }\n\n  setSubways() {\n    let arr = this.state.subwayLineChoice;\n    const api = new SubwayAPI();\n    api.getSubways(this.props.token).then(data => {\n      for (let subway of data) {\n        const key = subway.train_line_name;\n        arr.push(__jsx(\"li\", {\n          key: key,\n          \"data-id\": subway.id,\n          \"data-updn-line\": subway.direction,\n          \"data-statn-nm\": subway.station_name,\n          \"data-train-line-nm\": subway.train_line_name\n        }, subway.train_line_name.split(' - ')[0], __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: this.removeSubwayLine\n        })));\n      }\n\n      this.setState({\n        'subwayLineChoice': arr\n      });\n    });\n  }\n\n  setSubwayLine(event) {\n    this.setState({\n      'subwayLine': []\n    });\n    const name = event.target.value;\n\n    if (name.length < 2) {\n      return;\n    }\n\n    const api = new SubwayAPI();\n    api.getCurrentSubway(name).then(data => {\n      const arr = [];\n      let dict = {};\n\n      for (let i in data) {\n        dict[data[i].trainLineNm] = i;\n      }\n\n      for (let i in dict) {\n        const j = dict[i];\n        arr.push(__jsx(\"div\", {\n          key: j\n        }, __jsx(\"div\", {\n          \"data-updn-line\": data[j].updnLine,\n          \"data-statn-nm\": data[j].statnNm,\n          \"data-train-line-nm\": data[j].trainLineNm\n        }, data[j].trainLineNm), __jsx(\"div\", null, __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: this.addSubwayLine\n        }))));\n      }\n\n      this.setState({\n        'subwayLine': arr\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"list\"\n    }, __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      id: \"search-bus-station\",\n      onChange: this.setBusStation,\n      onFocus: this.setBusStation,\n      placeholder: \"\\uC815\\uB958\\uC18C\\uBA85\"\n    }), __jsx(\"ul\", {\n      id: \"search-bus-station-result\"\n    }, this.state.busStation), __jsx(\"div\", {\n      id: \"bus-route-result\"\n    }, this.state.busRoute), __jsx(\"ul\", {\n      id: \"bus-route-choice\"\n    }, this.state.busRouteChoice)), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      id: \"search-subway-station\",\n      onChange: this.setSubwayLine,\n      onFocus: this.setSubwayLine,\n      placeholder: \"\\uC9C0\\uD558\\uCCA0\\uC5ED\\uBA85(\\uC5ED\\uC81C\\uC678)\"\n    }), __jsx(\"div\", {\n      id: \"subway-line-result\"\n    }, this.state.subwayLine), __jsx(\"ul\", {\n      id: \"subway-line-choice\"\n    }, this.state.subwayLineChoice)));\n  }\n\n}\n\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}