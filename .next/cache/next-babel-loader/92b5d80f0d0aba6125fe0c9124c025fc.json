{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport $ from 'jquery';\nimport axios from 'axios';\nimport config from 'config.json';\nimport { Temperature } from './common';\n\nvar WeatherAPI =\n/*#__PURE__*/\nfunction () {\n  function WeatherAPI() {\n    _classCallCheck(this, WeatherAPI);\n\n    _defineProperty(this, \"API_KEY\", config.WEATHER_API_KEY);\n  }\n\n  _createClass(WeatherAPI, [{\n    key: \"getCurrentWeather\",\n    value: function getCurrentWeather() {\n      return axios.get('http://api.openweathermap.org/data/2.5/weather?q=Seoul&appid=' + this.API_KEY).then(function (response) {\n        var weather = new Weather(response.data);\n        return weather.getData();\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return undefined;\n      });\n    }\n  }, {\n    key: \"getHourlyWeather\",\n    value: function getHourlyWeather() {\n      return axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Seoul&appid=' + this.API_KEY).then(function (response) {\n        var list = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(response.data.list), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var data = _step.value;\n            var weather = new Weather(data);\n            list.push(weather.getData());\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return list;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return [];\n      });\n    }\n  }]);\n\n  return WeatherAPI;\n}();\n\nvar Weather =\n/*#__PURE__*/\nfunction () {\n  function Weather(data) {\n    _classCallCheck(this, Weather);\n\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"weather\", void 0);\n\n    _defineProperty(this, \"main\", void 0);\n\n    this.data = data;\n    this.weather = this.data.weather;\n    this.main = this.data.main;\n  }\n\n  _createClass(Weather, [{\n    key: \"getWeather\",\n    value: function getWeather() {\n      var data = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(this.weather), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var w = _step2.value;\n          data.id = w.id;\n          data.icon = 'http://openweathermap.org/img/wn/' + w.icon + '@2x.png';\n          data.main = w.main;\n          data.desc = w.description;\n          break;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"getTemp\",\n    value: function getTemp() {\n      var t = new Temperature();\n      var temp = t.kelvinToCelsius(this.main.temp);\n      var minTemp = t.kelvinToCelsius(this.main.temp_min);\n      var maxTemp = t.kelvinToCelsius(this.main.temp_max);\n      return {\n        temp: temp,\n        minTemp: minTemp,\n        maxTemp: maxTemp\n      };\n    }\n  }, {\n    key: \"getDateTime\",\n    value: function getDateTime() {\n      return this.data.dt * 1000;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var weather = this.getWeather();\n      var temp = this.getTemp();\n      var dt = this.getDateTime();\n      return $.extend(weather, temp, {\n        dt: dt\n      });\n    }\n  }]);\n\n  return Weather;\n}();\n\nexport { WeatherAPI };","map":null,"metadata":{},"sourceType":"module"}