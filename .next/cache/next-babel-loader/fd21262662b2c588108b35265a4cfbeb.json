{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst SIGNIN = 'signin/SIGNIN';\nconst SIGNOUT = 'signin/SIGNOUT';\nexport const signinAction = {\n  signin: token => ({\n    type: SIGNIN,\n    isSignin: true,\n    token: token\n  }),\n  signout: () => ({\n    type: SIGNOUT,\n    isSignin: false,\n    token: ''\n  })\n};\nconst initialState = {\n  isSignin: false,\n  token: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNIN:\n      return _objectSpread({}, state, {\n        isSignin: action.isSignin,\n        token: action.token\n      });\n\n    case SIGNOUT:\n      return _objectSpread({}, state, {\n        isSignin: action.isSignin,\n        token: action.token\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/store/actions/signin.tsx"],"names":["SIGNIN","SIGNOUT","signinAction","signin","token","type","isSignin","signout","initialState","reducer","state","action"],"mappings":";;;;;;;;;;;;AAAA,MAAMA,MAAM,GAAG,eAAf;AACA,MAAMC,OAAO,GAAG,gBAAhB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAGC,KAAD,KAAoB;AAAEC,IAAAA,IAAI,EAAEL,MAAR;AAAgBM,IAAAA,QAAQ,EAAE,IAA1B;AAAgCF,IAAAA,KAAK,EAAEA;AAAvC,GAApB,CADkB;AAE1BG,EAAAA,OAAO,EAAE,OAAO;AAAEF,IAAAA,IAAI,EAAEJ,OAAR;AAAiBK,IAAAA,QAAQ,EAAE,KAA3B;AAAkCF,IAAAA,KAAK,EAAE;AAAzC,GAAP;AAFiB,CAArB;AAcP,MAAMI,YAAyB,GAAG;AAChCF,EAAAA,QAAQ,EAAE,KADsB;AAEhCF,EAAAA,KAAK,EAAE;AAFyB,CAAlC;;AAKA,MAAMK,OAAO,GAAG,CAACC,KAAkB,GAAGF,YAAtB,EAAoCG,MAApC,KAAqE;AACnF,UAAOA,MAAM,CAACN,IAAd;AACE,SAAKL,MAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,QAAQ,EAAGK,MAAD,CAAyBL,QAFrC;AAGEF,QAAAA,KAAK,EAAGO,MAAD,CAAyBP;AAHlC;;AAKF,SAAKH,OAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,QAAQ,EAAGK,MAAD,CAA0BL,QAFtC;AAGEF,QAAAA,KAAK,EAAGO,MAAD,CAA0BP;AAHnC;;AAKF;AACE,aAAOM,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["const SIGNIN = 'signin/SIGNIN';\nconst SIGNOUT = 'signin/SIGNOUT';\n\nexport const signinAction = {\n  signin: (token: string) => ({ type: SIGNIN, isSignin: true, token: token }),\n  signout: () => ({ type: SIGNOUT, isSignin: false, token: '' }),\n};\n\ntype SigninAction = ReturnType<typeof signinAction.signin>;\ntype SignoutAction = ReturnType<typeof signinAction.signout>;\ntype Actions = SigninAction | SignoutAction;\n\nexport type SigninState = Readonly<{\n  isSignin: boolean,\n  token: string\n}>;\n\nconst initialState: SigninState = {\n  isSignin: false,\n  token: '',\n};\n\nconst reducer = (state: SigninState = initialState, action: Actions): SigninState => {\n  switch(action.type) {\n    case SIGNIN:\n      return {\n        ...state,\n        isSignin: (action as SigninAction).isSignin,\n        token: (action as SigninAction).token,\n      };\n    case SIGNOUT:\n      return {\n        ...state,\n        isSignin: (action as SignoutAction).isSignin,\n        token: (action as SignoutAction).token,\n      };\n    default: \n      return state;\n  }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}