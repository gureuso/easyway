{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nimport xml from 'fast-xml-parser';\nimport Cookies from 'js-cookie';\nimport config from 'config.json';\nimport { Moment } from './common';\nimport { TimeUI } from './ui';\n\nvar BusUI =\n/*#__PURE__*/\nfunction () {\n  function BusUI() {\n    _classCallCheck(this, BusUI);\n  }\n\n  _createClass(BusUI, null, [{\n    key: \"setWaitingTime\",\n    value: function setWaitingTime(target, sec) {\n      var ui = new TimeUI();\n      ui.setWaitingTime(target, sec, BusUI.setCurrentBus);\n    }\n  }, {\n    key: \"setCurrentBus\",\n    value: function setCurrentBus(target) {\n      var api = new BusAPI();\n      var res = api.getDataByRoute();\n      res.then(function (data) {\n        if (data) {\n          var bus = new Bus(data);\n          var waitingSec = bus.getWaitingSec();\n\n          if (waitingSec < 1) {\n            target.text(bus.message);\n          } else {\n            BusUI.setWaitingTime(target, waitingSec);\n          }\n        } else {\n          target.text('data is null');\n        }\n      });\n    }\n  }]);\n\n  return BusUI;\n}();\n\nvar BusAPI =\n/*#__PURE__*/\nfunction () {\n  function BusAPI() {\n    _classCallCheck(this, BusAPI);\n\n    _defineProperty(this, \"API_KEY\", config.BUS_API_KEY);\n\n    _defineProperty(this, \"PROXY_HOST\", config.API_HOST);\n  }\n\n  _createClass(BusAPI, [{\n    key: \"proxy\",\n    value: function proxy(url) {\n      return axios.get(this.PROXY_HOST + '/apis/proxy?url=' + encodeURIComponent(url)).then(function (response) {\n        var data = xml.parse(response.data.data.data).ServiceResult.msgBody;\n        return data ? data.itemList : undefined;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return undefined;\n      });\n    }\n  }, {\n    key: \"createBus\",\n    value: function createBus(name, station_id, bus_route_id, ord) {\n      var csrfmiddlewaretoken = Cookies.get('csrftoken');\n      var data = {\n        name: name,\n        station_id: station_id,\n        bus_route_id: bus_route_id,\n        ord: ord,\n        csrfmiddlewaretoken: csrfmiddlewaretoken\n      };\n      return axios.post(\"\".concat(this.PROXY_HOST, \"/public_transport/buses/create\"), data, {\n        headers: {\n          'X-CSRFToken': csrfmiddlewaretoken\n        }\n      }).then(function (response) {\n        console.log(response.data);\n        return undefined;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return undefined;\n      });\n    }\n  }, {\n    key: \"getBusRoute\",\n    value: function getBusRoute(arsId) {\n      var url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByUid?';\n      url += 'serviceKey=' + this.API_KEY;\n      url += '&arsId=' + arsId;\n      return this.proxy(url);\n    }\n  }, {\n    key: \"getBusStation\",\n    value: function getBusStation(name) {\n      var url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByName?';\n      url += 'serviceKey=' + this.API_KEY;\n      url += '&stSrch=' + name;\n      return this.proxy(url);\n    }\n  }, {\n    key: \"getDataByRoute\",\n    value: function getDataByRoute() {\n      var stId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 116000149;\n      var busRouteId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100100453;\n      var ord = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 35;\n      var url = 'http://ws.bus.go.kr/api/rest/arrive/getArrInfoByRoute?';\n      url += 'serviceKey=' + this.API_KEY;\n      url += '&stId=' + stId;\n      url += '&busRouteId=' + busRouteId;\n      url += '&ord=' + ord;\n      return this.proxy(url);\n    }\n  }]);\n\n  return BusAPI;\n}();\n\nvar BusMessage =\n/*#__PURE__*/\nfunction () {\n  function BusMessage(message) {\n    _classCallCheck(this, BusMessage);\n\n    _defineProperty(this, \"message\", void 0);\n\n    this.message = message;\n  }\n\n  _createClass(BusMessage, [{\n    key: \"getWaitingSec\",\n    value: function getWaitingSec() {\n      var matchMinute = this.message.match(/\\d+분/g);\n      var minute = matchMinute ? _parseInt(matchMinute[0].replace('분', '')) : 0;\n      var matchSec = this.message.match(/\\d+초/g);\n      var sec = matchSec ? _parseInt(matchSec[0].replace('초', '')) : 0;\n      return minute * 60 + sec;\n    }\n  }, {\n    key: \"checkBusShutdown\",\n    value: function checkBusShutdown() {\n      if (this.message.search(/운행종료/g) != -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return BusMessage;\n}();\n\nvar Bus =\n/*#__PURE__*/\nfunction () {\n  function Bus(data) {\n    _classCallCheck(this, Bus);\n\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"busNum\", void 0);\n\n    _defineProperty(this, \"message\", void 0);\n\n    _defineProperty(this, \"apiCallTime\", void 0);\n\n    this.data = data;\n    this.busNum = _parseInt(this.data.rtNm);\n    this.message = this.data.arrmsg1;\n    this.apiCallTime = this.data.mkTm;\n  }\n\n  _createClass(Bus, [{\n    key: \"getCorrectionSec\",\n    value: function getCorrectionSec() {\n      var m = new Moment();\n      return m.getCorrectionSec(this.apiCallTime);\n    }\n  }, {\n    key: \"getWaitingSec\",\n    value: function getWaitingSec() {\n      var bm = new BusMessage(this.message);\n      return bm.getWaitingSec() - this.getCorrectionSec();\n    }\n  }]);\n\n  return Bus;\n}();\n\nexport { BusUI, BusAPI };","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/lib/bus.tsx"],"names":["axios","xml","Cookies","config","Moment","TimeUI","BusUI","target","sec","ui","setWaitingTime","setCurrentBus","api","BusAPI","res","getDataByRoute","then","data","bus","Bus","waitingSec","getWaitingSec","text","message","BUS_API_KEY","API_HOST","url","get","PROXY_HOST","encodeURIComponent","response","parse","ServiceResult","msgBody","itemList","undefined","error","console","log","name","station_id","bus_route_id","ord","csrfmiddlewaretoken","post","headers","arsId","API_KEY","proxy","stId","busRouteId","BusMessage","matchMinute","match","minute","replace","matchSec","search","busNum","rtNm","arrmsg1","apiCallTime","mkTm","m","getCorrectionSec","bm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport xml from 'fast-xml-parser';\nimport Cookies from 'js-cookie';\n\nimport config from 'config.json';\nimport { Moment } from './common';\nimport { TimeUI } from './ui';\n\nclass BusUI {\n  static setWaitingTime(target: JQuery<HTMLElement>, sec: number) {\n    const ui = new TimeUI();\n    ui.setWaitingTime(target, sec, BusUI.setCurrentBus);\n  }\n\n  static setCurrentBus(target: JQuery<HTMLElement>) {\n    const api = new BusAPI();\n    const res = api.getDataByRoute();\n    res.then(data => {\n      if(data) {\n        const bus = new Bus(data);\n        const waitingSec = bus.getWaitingSec();\n        if(waitingSec < 1) {\n          target.text(bus.message);\n        } else {\n          BusUI.setWaitingTime(target, waitingSec);\n        }\n      } else {\n        target.text('data is null');\n      }\n    });\n  }\n}\n\nclass BusAPI {\n  API_KEY: string = config.BUS_API_KEY;\n  PROXY_HOST: string = config.API_HOST;\n\n  proxy(url: string) {\n    return axios.get(this.PROXY_HOST + '/apis/proxy?url=' + encodeURIComponent(url))\n    .then(response => {\n      const data = xml.parse(response.data.data.data).ServiceResult.msgBody;\n      return data ? data.itemList : undefined;\n    })\n    .catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  createBus(name: string, station_id: number, bus_route_id: number, ord: number) {\n    const csrfmiddlewaretoken = Cookies.get('csrftoken');\n    const data = {name, station_id, bus_route_id, ord, csrfmiddlewaretoken}\n    return axios.post(`${this.PROXY_HOST}/public_transport/buses/create`, data, {headers: {'X-CSRFToken': csrfmiddlewaretoken}})\n    .then(response => {\n      console.log(response.data);\n      return undefined;\n    })\n    .catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  getBusRoute(arsId: string) {\n    let url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByUid?'\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&arsId=' + arsId;\n\n    return this.proxy(url);\n  }\n\n  getBusStation(name: string) {\n    let url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByName?'\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&stSrch=' + name;\n\n    return this.proxy(url);\n  }\n\n  getDataByRoute(stId=116000149, busRouteId=100100453, ord=35) {\n    let url = 'http://ws.bus.go.kr/api/rest/arrive/getArrInfoByRoute?';\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&stId=' + stId;\n    url += '&busRouteId=' + busRouteId;\n    url += '&ord=' + ord;\n\n    return this.proxy(url);\n  }\n}\n\nclass BusMessage {\n  message: string;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n\n  getWaitingSec(): number {\n    const matchMinute = this.message.match(/\\d+분/g)!;\n    const minute = matchMinute ? parseInt(matchMinute[0].replace('분', '')) : 0;\n    const matchSec = this.message.match(/\\d+초/g)!;\n    const sec = matchSec ? parseInt(matchSec[0].replace('초', '')) : 0;\n    return minute * 60 + sec;\n  }\n\n  checkBusShutdown(): boolean {\n    if(this.message.search(/운행종료/g) != -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nclass Bus {\n  data: {[key: string]: any};\n  busNum: number;\n  message: string;\n  apiCallTime: string;\n\n  constructor(data: {[key: string]: any}) {\n    this.data = data;\n    this.busNum = parseInt(this.data.rtNm);\n    this.message = this.data.arrmsg1;\n    this.apiCallTime = this.data.mkTm;\n  }\n\n  private getCorrectionSec(): number {\n    const m = new Moment();\n    return m.getCorrectionSec(this.apiCallTime);\n  }\n\n  getWaitingSec(): number {\n    const bm = new BusMessage(this.message);\n    return bm.getWaitingSec() - this.getCorrectionSec();\n  }\n}\n\nexport { BusUI, BusAPI };\n"]},"metadata":{},"sourceType":"module"}