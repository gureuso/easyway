{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Provider } from 'mobx-react';\nimport { getSnapshot } from 'mobx-state-tree';\nimport App from 'next/app';\nimport React from 'react';\nimport { initializeStore } from 'store/store';\nimport 'normalize.css';\nimport 'static/css/style.less';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const store = initializeStore();\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      initialState: getSnapshot(store),\n      pageProps\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"store\", void 0);\n\n    this.store = initializeStore(props.initialState);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: this.store\n    }, __jsx(Component, pageProps));\n  }\n\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}