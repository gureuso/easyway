{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yjh/Documents/React/easyway/pages/_app.tsx\";\nvar __jsx = React.createElement;\n// import React from 'react'\n// import App from 'next/app'\n// import { Provider } from 'react-redux';\n// import configureStore from 'store/configureStore';\n// import 'normalize.css';\n// import 'static/css/style.less';\n// class MyApp extends App {\n//   render() {\n//     const { Component, pageProps } = this.props;\n//     return (\n//       <Provider store={configureStore()}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     );\n//   }\n// }\n// export default MyApp;\nimport { Provider } from 'mobx-react';\nimport { getSnapshot } from 'mobx-state-tree';\nimport App from 'next/app';\nimport React from 'react';\nimport { initializeStore } from '../store2/store';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const store = initializeStore();\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      initialState: getSnapshot(store),\n      pageProps\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"store\", void 0);\n\n    this.store = initializeStore(props.initialState);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: this.store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/pages/_app.tsx"],"names":["Provider","getSnapshot","App","React","initializeStore","MyApp","getInitialProps","Component","ctx","store","pageProps","initialState","constructor","props","render"],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAwC,iBAAxC;;AAMA,MAAMC,KAAN,SAAoBH,GAApB,CAAmC;AACjC,eAAoBI,eAApB,CAAoC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAApC,EAA6D;AAC3D,UAAMC,KAAK,GAAGL,eAAe,EAA7B;AACA,QAAIM,SAAS,GAAG,EAAhB;;AACA,QAAIH,SAAS,CAACD,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AACD,WAAO;AACLG,MAAAA,YAAY,EAAEV,WAAW,CAACQ,KAAD,CADpB;AAELC,MAAAA;AAFK,KAAP;AAID;;AAIDE,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB;;AAEtB,SAAKJ,KAAL,GAAaL,eAAe,CAACS,KAAK,CAACF,YAAP,CAA5B;AACD;;AAEMG,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEP,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAA2B,KAAKG,KAAtC;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AA3BgC;;AA8BnC,eAAeL,KAAf","sourcesContent":["// import React from 'react'\n// import App from 'next/app'\n// import { Provider } from 'react-redux';\n// import configureStore from 'store/configureStore';\n\n// import 'normalize.css';\n// import 'static/css/style.less';\n\n\n// class MyApp extends App {\n//   render() {\n//     const { Component, pageProps } = this.props;\n//     return (\n//       <Provider store={configureStore()}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     );\n//   }\n// }\n\n// export default MyApp;\nimport { Provider } from 'mobx-react';\nimport { getSnapshot } from 'mobx-state-tree';\nimport App from 'next/app';\nimport React from 'react';\nimport { initializeStore, IStore } from '../store2/store';\n\ninterface IOwnProps {\n  initialState: IStore\n}\n\nclass MyApp extends App<IOwnProps> {\n  public static async getInitialProps({ Component, ctx }: any) {\n    const store = initializeStore()\n    let pageProps = {}\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n    return {\n      initialState: getSnapshot(store),\n      pageProps,\n    }\n  }\n\n  private store: IStore\n\n  constructor(props: any) {\n    super(props)\n    this.store = initializeStore(props.initialState) as IStore\n  }\n\n  public render() {\n    const { Component, pageProps } = this.props\n    return (\n      <Provider store={this.store}>\n        <Component {...pageProps} />\n      </Provider>\n    )\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}