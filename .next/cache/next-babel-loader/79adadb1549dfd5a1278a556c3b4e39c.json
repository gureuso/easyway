{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yjh/Documents/React/easyway/components/pages/settings.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport $ from 'jquery';\nimport { BusAPI } from 'lib/bus';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      busStation: [],\n      busRoute: [],\n      busRouteChoice: []\n    });\n\n    this.setBusStation = this.setBusStation.bind(this);\n    this.setBusRoute = this.setBusRoute.bind(this);\n    this.addBusRoute = this.addBusRoute.bind(this);\n  }\n\n  addBusRoute(event) {\n    const target = $(event.target).closest('div').prev();\n    let arr = this.state.busRouteChoice;\n    const key = target.data('st-id') + target.data('busroute-id');\n    let alreadyKey = false;\n\n    for (let i in arr) {\n      if (arr[i].key == key) {\n        alreadyKey = true;\n        break;\n      }\n    }\n\n    if (alreadyKey) {\n      return;\n    }\n\n    arr.push(__jsx(\"li\", {\n      key: key,\n      \"data-st-id\": target.data('st-id'),\n      \"data-busroute-id\": target.data('busroute-id'),\n      \"data-ord\": target.data('ord'),\n      \"data-rtnm\": target.data('rtnm'),\n      \"data-adirection\": target.data('adirection'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, target.data('rtnm'), __jsx(\"img\", {\n      src: \"/static/img/plus_btn_01.svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n    this.setState({\n      'busRouteChoice': arr\n    });\n  }\n\n  setBusRoute(event) {\n    this.setState({\n      'busStation': []\n    });\n    const arsId = $(event.target).data('ars-id');\n    const api = new BusAPI();\n    api.getBusRoute(arsId).then(data => {\n      data = _Array$isArray(data) ? data : [data];\n      const arr = [];\n\n      for (let i in data) {\n        arr.push(__jsx(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          \"data-st-id\": data[i].stId,\n          \"data-busroute-id\": data[i].busRouteId,\n          \"data-ord\": data[i].staOrd,\n          \"data-rtnm\": data[i].rtNm,\n          \"data-adirection\": data[i].adirection,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, data[i].rtNm, \":\", data[i].adirection), __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: this.addBusRoute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }))));\n      }\n\n      this.setState({\n        'busRoute': arr\n      });\n    });\n  }\n\n  setBusStation(event) {\n    const name = event.target.value;\n\n    if (name.length < 2) {\n      return;\n    }\n\n    const api = new BusAPI();\n    api.getBusStation(name).then(data => {\n      data = data ? data.slice(0, 5) : undefined;\n      const arr = [];\n\n      for (let i in data) {\n        arr.push(__jsx(\"li\", {\n          key: i,\n          \"data-ars-id\": data[i].arsId,\n          onClick: this.setBusRoute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, data[i].stNm));\n      }\n\n      this.setState({\n        'busStation': arr\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      id: \"search-bus-station\",\n      onChange: this.setBusStation,\n      onFocus: this.setBusStation,\n      placeholder: \"\\uC815\\uB958\\uC18C\\uBA85\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), __jsx(\"ul\", {\n      id: \"search-bus-station-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.busStation), __jsx(\"div\", {\n      id: \"bus-route-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.busRoute), __jsx(\"ul\", {\n      id: \"bus-route-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.busRouteChoice)), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/components/pages/settings.tsx"],"names":["React","$","BusAPI","Settings","Component","constructor","props","busStation","busRoute","busRouteChoice","setBusStation","bind","setBusRoute","addBusRoute","event","target","closest","prev","arr","state","key","data","alreadyKey","i","push","setState","arsId","api","getBusRoute","then","stId","busRouteId","staOrd","rtNm","adirection","name","value","length","getBusStation","slice","undefined","stNm","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\n\nimport { BusAPI } from 'lib/bus';\n\ninterface SettingsStates {\n  busStation: JSX.Element[],\n  busRoute: JSX.Element[],\n  busRouteChoice: JSX.Element[]\n}\n\nclass Settings extends React.Component<{}, SettingsStates> {\n  constructor(props: any) {\n    super(props);\n\n    this.setBusStation = this.setBusStation.bind(this)\n    this.setBusRoute = this.setBusRoute.bind(this)\n    this.addBusRoute = this.addBusRoute.bind(this)\n  }\n\n  state = {\n    busStation: [],\n    busRoute: [],\n    busRouteChoice: []\n  }\n\n  addBusRoute(event: any) {\n    const target = $(event.target).closest('div').prev();\n\n    let arr: JSX.Element[] = this.state.busRouteChoice;\n    const key = target.data('st-id') + target.data('busroute-id');\n    \n    let alreadyKey = false;\n    for(let i in arr) {\n      if(arr[i].key == key) {\n        alreadyKey = true\n        break;\n      }\n    }\n    if(alreadyKey) {\n      return;\n    }\n\n    arr.push(\n      <li key={key} data-st-id={target.data('st-id')} data-busroute-id={target.data('busroute-id')} data-ord={target.data('ord')} data-rtnm={target.data('rtnm')} data-adirection={target.data('adirection')}>{target.data('rtnm')}<img src=\"/static/img/plus_btn_01.svg\"/></li>\n    )\n    this.setState({'busRouteChoice': arr});\n  }\n\n  setBusRoute(event: any) {\n    this.setState({'busStation': []});\n    const arsId = $(event.target).data('ars-id');\n\n    const api = new BusAPI();\n    api.getBusRoute(arsId).then(data => {\n      data = Array.isArray(data) ? data : [data]\n\n      const arr = [];\n      for(let i in data) {\n        arr.push(\n          <div key={i}>\n            <div data-st-id={data[i].stId} data-busroute-id={data[i].busRouteId} data-ord={data[i].staOrd} data-rtnm={data[i].rtNm} data-adirection={data[i].adirection}>{data[i].rtNm}:{data[i].adirection}</div>\n            <div><img src=\"/static/img/plus_btn_01.svg\" onClick={this.addBusRoute}/></div>\n          </div>\n        )\n      }\n      this.setState({'busRoute': arr});\n    });\n  }\n\n  setBusStation(event: any) {\n    const name = event.target.value;\n    if(name.length < 2) {\n      return;\n    }\n\n    const api = new BusAPI();\n    api.getBusStation(name).then(data => {\n      data = data ? data.slice(0, 5) : undefined;\n\n      const arr = [];\n      for(let i in data) {  \n        arr.push(\n          <li key={i} data-ars-id={data[i].arsId} onClick={this.setBusRoute}>{data[i].stNm}</li>\n        );\n      }\n      this.setState({'busStation': arr});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"list\">\n        <div>\n          <input type=\"text\" id=\"search-bus-station\" onChange={this.setBusStation} onFocus={this.setBusStation} placeholder=\"정류소명\"/>\n          <ul id=\"search-bus-station-result\">\n            {this.state.busStation}\n          </ul>\n          <div id=\"bus-route-result\">\n            {this.state.busRoute}\n          </div>\n          <ul id=\"bus-route-choice\">\n            {this.state.busRouteChoice}\n          </ul>\n        </div>\n        <div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}