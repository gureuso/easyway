{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport axios from 'axios';\nimport xml from 'fast-xml-parser';\nimport Cookies from 'js-cookie';\nimport config from 'config.json';\nimport { Moment } from './common';\nimport { TimeUI } from './ui';\n\nclass BusUI {\n  static setWaitingTime(target, sec) {\n    const ui = new TimeUI();\n    ui.setWaitingTime(target, sec, BusUI.setCurrentBus);\n  }\n\n  static setCurrentBus(target) {\n    const api = new BusAPI();\n    const res = api.getDataByRoute();\n    res.then(data => {\n      if (data) {\n        const bus = new Bus(data);\n        const waitingSec = bus.getWaitingSec();\n\n        if (waitingSec < 1) {\n          target.text(bus.message);\n        } else {\n          BusUI.setWaitingTime(target, waitingSec);\n        }\n      } else {\n        target.text('data is null');\n      }\n    });\n  }\n\n}\n\nclass BusAPI {\n  constructor() {\n    _defineProperty(this, \"API_KEY\", config.BUS_API_KEY);\n\n    _defineProperty(this, \"PROXY_HOST\", config.API_HOST);\n  }\n\n  proxy(url) {\n    return axios.get(this.PROXY_HOST + '/apis/proxy?url=' + encodeURIComponent(url)).then(response => {\n      const data = xml.parse(response.data.data.data).ServiceResult.msgBody;\n      return data ? data.itemList : undefined;\n    }).catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  createBus(name, station_id, bus_route_id, ord) {\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n    const csrfmiddlewaretoken = Cookies.get('csrftoken');\n    const data = {\n      name,\n      station_id,\n      bus_route_id,\n      ord,\n      csrfmiddlewaretoken\n    };\n    return axios.post(`${this.PROXY_HOST}/public_transport/buses/create`, data).then(response => {\n      console.log(response.data);\n      return undefined;\n    }).catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  getBusRoute(arsId) {\n    let url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByUid?';\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&arsId=' + arsId;\n    return this.proxy(url);\n  }\n\n  getBusStation(name) {\n    let url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByName?';\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&stSrch=' + name;\n    return this.proxy(url);\n  }\n\n  getDataByRoute(stId = 116000149, busRouteId = 100100453, ord = 35) {\n    let url = 'http://ws.bus.go.kr/api/rest/arrive/getArrInfoByRoute?';\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&stId=' + stId;\n    url += '&busRouteId=' + busRouteId;\n    url += '&ord=' + ord;\n    return this.proxy(url);\n  }\n\n}\n\nclass BusMessage {\n  constructor(message) {\n    _defineProperty(this, \"message\", void 0);\n\n    this.message = message;\n  }\n\n  getWaitingSec() {\n    const matchMinute = this.message.match(/\\d+분/g);\n    const minute = matchMinute ? _parseInt(matchMinute[0].replace('분', '')) : 0;\n    const matchSec = this.message.match(/\\d+초/g);\n    const sec = matchSec ? _parseInt(matchSec[0].replace('초', '')) : 0;\n    return minute * 60 + sec;\n  }\n\n  checkBusShutdown() {\n    if (this.message.search(/운행종료/g) != -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nclass Bus {\n  constructor(data) {\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"busNum\", void 0);\n\n    _defineProperty(this, \"message\", void 0);\n\n    _defineProperty(this, \"apiCallTime\", void 0);\n\n    this.data = data;\n    this.busNum = _parseInt(this.data.rtNm);\n    this.message = this.data.arrmsg1;\n    this.apiCallTime = this.data.mkTm;\n  }\n\n  getCorrectionSec() {\n    const m = new Moment();\n    return m.getCorrectionSec(this.apiCallTime);\n  }\n\n  getWaitingSec() {\n    const bm = new BusMessage(this.message);\n    return bm.getWaitingSec() - this.getCorrectionSec();\n  }\n\n}\n\nexport { BusUI, BusAPI };","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/lib/bus.tsx"],"names":["axios","xml","Cookies","config","Moment","TimeUI","BusUI","setWaitingTime","target","sec","ui","setCurrentBus","api","BusAPI","res","getDataByRoute","then","data","bus","Bus","waitingSec","getWaitingSec","text","message","BUS_API_KEY","API_HOST","proxy","url","get","PROXY_HOST","encodeURIComponent","response","parse","ServiceResult","msgBody","itemList","undefined","catch","error","console","log","createBus","name","station_id","bus_route_id","ord","defaults","xsrfCookieName","xsrfHeaderName","csrfmiddlewaretoken","post","getBusRoute","arsId","API_KEY","getBusStation","stId","busRouteId","BusMessage","constructor","matchMinute","match","minute","replace","matchSec","checkBusShutdown","search","busNum","rtNm","arrmsg1","apiCallTime","mkTm","getCorrectionSec","m","bm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport xml from 'fast-xml-parser';\nimport Cookies from 'js-cookie';\n\nimport config from 'config.json';\nimport { Moment } from './common';\nimport { TimeUI } from './ui';\n\nclass BusUI {\n  static setWaitingTime(target: JQuery<HTMLElement>, sec: number) {\n    const ui = new TimeUI();\n    ui.setWaitingTime(target, sec, BusUI.setCurrentBus);\n  }\n\n  static setCurrentBus(target: JQuery<HTMLElement>) {\n    const api = new BusAPI();\n    const res = api.getDataByRoute();\n    res.then(data => {\n      if(data) {\n        const bus = new Bus(data);\n        const waitingSec = bus.getWaitingSec();\n        if(waitingSec < 1) {\n          target.text(bus.message);\n        } else {\n          BusUI.setWaitingTime(target, waitingSec);\n        }\n      } else {\n        target.text('data is null');\n      }\n    });\n  }\n}\n\nclass BusAPI {\n  API_KEY: string = config.BUS_API_KEY;\n  PROXY_HOST: string = config.API_HOST;\n\n  proxy(url: string) {\n    return axios.get(this.PROXY_HOST + '/apis/proxy?url=' + encodeURIComponent(url))\n    .then(response => {\n      const data = xml.parse(response.data.data.data).ServiceResult.msgBody;\n      return data ? data.itemList : undefined;\n    })\n    .catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  createBus(name: string, station_id: number, bus_route_id: number, ord: number) {\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n    const csrfmiddlewaretoken = Cookies.get('csrftoken');\n    const data = {name, station_id, bus_route_id, ord, csrfmiddlewaretoken}\n    return axios.post(`${this.PROXY_HOST}/public_transport/buses/create`, data)\n    .then(response => {\n      console.log(response.data);\n      return undefined;\n    })\n    .catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  getBusRoute(arsId: string) {\n    let url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByUid?'\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&arsId=' + arsId;\n\n    return this.proxy(url);\n  }\n\n  getBusStation(name: string) {\n    let url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByName?'\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&stSrch=' + name;\n\n    return this.proxy(url);\n  }\n\n  getDataByRoute(stId=116000149, busRouteId=100100453, ord=35) {\n    let url = 'http://ws.bus.go.kr/api/rest/arrive/getArrInfoByRoute?';\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&stId=' + stId;\n    url += '&busRouteId=' + busRouteId;\n    url += '&ord=' + ord;\n\n    return this.proxy(url);\n  }\n}\n\nclass BusMessage {\n  message: string;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n\n  getWaitingSec(): number {\n    const matchMinute = this.message.match(/\\d+분/g)!;\n    const minute = matchMinute ? parseInt(matchMinute[0].replace('분', '')) : 0;\n    const matchSec = this.message.match(/\\d+초/g)!;\n    const sec = matchSec ? parseInt(matchSec[0].replace('초', '')) : 0;\n    return minute * 60 + sec;\n  }\n\n  checkBusShutdown(): boolean {\n    if(this.message.search(/운행종료/g) != -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nclass Bus {\n  data: {[key: string]: any};\n  busNum: number;\n  message: string;\n  apiCallTime: string;\n\n  constructor(data: {[key: string]: any}) {\n    this.data = data;\n    this.busNum = parseInt(this.data.rtNm);\n    this.message = this.data.arrmsg1;\n    this.apiCallTime = this.data.mkTm;\n  }\n\n  private getCorrectionSec(): number {\n    const m = new Moment();\n    return m.getCorrectionSec(this.apiCallTime);\n  }\n\n  getWaitingSec(): number {\n    const bm = new BusMessage(this.message);\n    return bm.getWaitingSec() - this.getCorrectionSec();\n  }\n}\n\nexport { BusUI, BusAPI };\n"]},"metadata":{},"sourceType":"module"}