{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nimport xml from 'fast-xml-parser';\nimport config from 'config.json';\nimport { Moment } from './common';\nimport { TimeUI } from './ui';\n\nvar BusUI =\n/*#__PURE__*/\nfunction () {\n  function BusUI() {\n    _classCallCheck(this, BusUI);\n  }\n\n  _createClass(BusUI, null, [{\n    key: \"setWaitingTime\",\n    value: function setWaitingTime(target, sec, stId, busRouteId, ord) {\n      var ui = new TimeUI();\n      ui.setWaitingTimeWithBus(target, sec, BusUI.setCurrentBus, stId, busRouteId, ord);\n    }\n  }, {\n    key: \"setCurrentBus\",\n    value: function setCurrentBus(target, stId, busRouteId, ord) {\n      var api = new BusAPI();\n      api.getDataByRoute(stId, busRouteId, ord).then(function (data) {\n        if (data) {\n          var bus = new Bus(data);\n          var waitingSec = bus.getWaitingSec();\n\n          if (waitingSec < 1) {\n            target.text(bus.message);\n          } else {\n            BusUI.setWaitingTime(target, waitingSec, stId, busRouteId, ord);\n          }\n        } else {\n          target.text('data is null');\n        }\n      });\n    }\n  }]);\n\n  return BusUI;\n}();\n\nvar BusAPI =\n/*#__PURE__*/\nfunction () {\n  function BusAPI() {\n    _classCallCheck(this, BusAPI);\n\n    _defineProperty(this, \"API_KEY\", config.BUS_API_KEY);\n\n    _defineProperty(this, \"PROXY_HOST\", config.API_HOST);\n  }\n\n  _createClass(BusAPI, [{\n    key: \"proxy\",\n    value: function proxy(url) {\n      return axios.get(this.PROXY_HOST + '/apis/proxy?url=' + encodeURIComponent(url)).then(function (response) {\n        var data = xml.parse(response.data.data.data).ServiceResult.msgBody;\n        return data ? data.itemList : undefined;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return undefined;\n      });\n    }\n  }, {\n    key: \"createBus\",\n    value: function createBus(name, stationId, busRouteId, ord, token) {\n      var form = new FormData();\n      form.append('name', name);\n      form.append('station_id', stationId);\n      form.append('bus_route_id', busRouteId);\n      form.append('ord', ord);\n      form.append('token', token);\n      return axios.post(\"\".concat(this.PROXY_HOST, \"/public_transport/buses/create\"), form).then(function (response) {\n        return response.data.data;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return {};\n      });\n    }\n  }, {\n    key: \"deleteBus\",\n    value: function deleteBus(id, token) {\n      return axios[\"delete\"](\"\".concat(this.PROXY_HOST, \"/public_transport/buses/\").concat(id, \"/delete?token=\").concat(token)).then(function (response) {\n        return response.data;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return {};\n      });\n    }\n  }, {\n    key: \"getBuses\",\n    value: function getBuses(token) {\n      return axios.get(\"\".concat(this.PROXY_HOST, \"/public_transport/buses?token=\").concat(token)).then(function (response) {\n        return response.data.data.buses;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return [];\n      });\n    }\n  }, {\n    key: \"getBusRoute\",\n    value: function getBusRoute(arsId) {\n      var url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByUid?';\n      url += 'serviceKey=' + this.API_KEY;\n      url += '&arsId=' + arsId;\n      return this.proxy(url);\n    }\n  }, {\n    key: \"getBusStation\",\n    value: function getBusStation(name) {\n      var url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByName?';\n      url += 'serviceKey=' + this.API_KEY;\n      url += '&stSrch=' + name;\n      return this.proxy(url);\n    }\n  }, {\n    key: \"getDataByRoute\",\n    value: function getDataByRoute(stId, busRouteId, ord) {\n      var url = 'http://ws.bus.go.kr/api/rest/arrive/getArrInfoByRoute?';\n      url += 'serviceKey=' + this.API_KEY;\n      url += '&stId=' + stId;\n      url += '&busRouteId=' + busRouteId;\n      url += '&ord=' + ord;\n      return this.proxy(url);\n    }\n  }]);\n\n  return BusAPI;\n}();\n\nvar BusMessage =\n/*#__PURE__*/\nfunction () {\n  function BusMessage(message) {\n    _classCallCheck(this, BusMessage);\n\n    _defineProperty(this, \"message\", void 0);\n\n    this.message = message;\n  }\n\n  _createClass(BusMessage, [{\n    key: \"getWaitingSec\",\n    value: function getWaitingSec() {\n      var matchMinute = this.message.match(/\\d+분/g);\n      var minute = matchMinute ? _parseInt(matchMinute[0].replace('분', '')) : 0;\n      var matchSec = this.message.match(/\\d+초/g);\n      var sec = matchSec ? _parseInt(matchSec[0].replace('초', '')) : 0;\n      return minute * 60 + sec;\n    }\n  }, {\n    key: \"checkBusShutdown\",\n    value: function checkBusShutdown() {\n      if (this.message.search(/운행종료/g) != -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return BusMessage;\n}();\n\nvar Bus =\n/*#__PURE__*/\nfunction () {\n  function Bus(data) {\n    _classCallCheck(this, Bus);\n\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"busNum\", void 0);\n\n    _defineProperty(this, \"message\", void 0);\n\n    _defineProperty(this, \"apiCallTime\", void 0);\n\n    this.data = data;\n    this.busNum = _parseInt(this.data.rtNm);\n    this.message = this.data.arrmsg1;\n    this.apiCallTime = this.data.mkTm;\n  }\n\n  _createClass(Bus, [{\n    key: \"getCorrectionSec\",\n    value: function getCorrectionSec() {\n      var m = new Moment();\n      return m.getCorrectionSec(this.apiCallTime);\n    }\n  }, {\n    key: \"getWaitingSec\",\n    value: function getWaitingSec() {\n      var bm = new BusMessage(this.message);\n      return bm.getWaitingSec() - this.getCorrectionSec();\n    }\n  }]);\n\n  return Bus;\n}();\n\nexport { BusUI, BusAPI };","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/lib/bus.tsx"],"names":["axios","xml","config","Moment","TimeUI","BusUI","target","sec","stId","busRouteId","ord","ui","setWaitingTimeWithBus","setCurrentBus","api","BusAPI","getDataByRoute","then","data","bus","Bus","waitingSec","getWaitingSec","text","message","setWaitingTime","BUS_API_KEY","API_HOST","url","get","PROXY_HOST","encodeURIComponent","response","parse","ServiceResult","msgBody","itemList","undefined","error","console","log","name","stationId","token","form","FormData","append","post","id","buses","arsId","API_KEY","proxy","BusMessage","matchMinute","match","minute","replace","matchSec","search","busNum","rtNm","arrmsg1","apiCallTime","mkTm","m","getCorrectionSec","bm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport xml from 'fast-xml-parser';\n\nimport config from 'config.json';\nimport { Moment } from './common';\nimport { TimeUI } from './ui';\n\nclass BusUI {\n  static setWaitingTime(target: JQuery<HTMLElement>, sec: number, stId: number, busRouteId: number, ord: number) {\n    const ui = new TimeUI();\n    ui.setWaitingTimeWithBus(target, sec, BusUI.setCurrentBus, stId, busRouteId, ord);\n  }\n\n  static setCurrentBus(target: JQuery<HTMLElement>, stId: number, busRouteId: number, ord: number) {\n    const api = new BusAPI();\n    api.getDataByRoute(stId, busRouteId, ord).then(data => {\n      if(data) {\n        const bus = new Bus(data);\n        const waitingSec = bus.getWaitingSec();\n        if(waitingSec < 1) {\n          target.text(bus.message);\n        } else {\n          BusUI.setWaitingTime(target, waitingSec, stId, busRouteId, ord);\n        }\n      } else {\n        target.text('data is null');\n      }\n    });\n  }\n}\n\nclass BusAPI {\n  API_KEY: string = config.BUS_API_KEY;\n  PROXY_HOST: string = config.API_HOST;\n\n  proxy(url: string) {\n    return axios.get(this.PROXY_HOST + '/apis/proxy?url=' + encodeURIComponent(url))\n    .then(response => {\n      const data = xml.parse(response.data.data.data).ServiceResult.msgBody;\n      return data ? data.itemList : undefined;\n    })\n    .catch(error => {\n      console.log(error);\n      return undefined;\n    });\n  }\n\n  createBus(name: string, stationId: string, busRouteId: string, ord: string, token: string) {\n    const form = new FormData();\n    form.append('name', name);\n    form.append('station_id', stationId);\n    form.append('bus_route_id', busRouteId);\n    form.append('ord', ord);\n    form.append('token', token);\n\n    return axios.post(`${this.PROXY_HOST}/public_transport/buses/create`, form)\n    .then(response => {\n      return response.data.data;\n    })\n    .catch(error => {\n      console.log(error);\n      return {};\n    });\n  }\n\n  deleteBus(id: number, token: string) {\n    return axios.delete(`${this.PROXY_HOST}/public_transport/buses/${id}/delete?token=${token}`)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n      return {};\n    });\n  }\n\n  getBuses(token: string) {\n    return axios.get(`${this.PROXY_HOST}/public_transport/buses?token=${token}`)\n    .then(response => {\n      return response.data.data.buses;\n    })\n    .catch(error => {\n      console.log(error);\n      return [];\n    });\n  }\n\n  getBusRoute(arsId: string) {\n    let url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByUid?'\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&arsId=' + arsId;\n\n    return this.proxy(url);\n  }\n\n  getBusStation(name: string) {\n    let url = 'http://ws.bus.go.kr/api/rest/stationinfo/getStationByName?'\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&stSrch=' + name;\n\n    return this.proxy(url);\n  }\n\n  getDataByRoute(stId: number, busRouteId: number, ord: number) {\n    let url = 'http://ws.bus.go.kr/api/rest/arrive/getArrInfoByRoute?';\n    url += 'serviceKey=' + this.API_KEY;\n    url += '&stId=' + stId;\n    url += '&busRouteId=' + busRouteId;\n    url += '&ord=' + ord;\n\n    return this.proxy(url);\n  }\n}\n\nclass BusMessage {\n  message: string;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n\n  getWaitingSec(): number {\n    const matchMinute = this.message.match(/\\d+분/g)!;\n    const minute = matchMinute ? parseInt(matchMinute[0].replace('분', '')) : 0;\n    const matchSec = this.message.match(/\\d+초/g)!;\n    const sec = matchSec ? parseInt(matchSec[0].replace('초', '')) : 0;\n    return minute * 60 + sec;\n  }\n\n  checkBusShutdown(): boolean {\n    if(this.message.search(/운행종료/g) != -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nclass Bus {\n  data: {[key: string]: any};\n  busNum: number;\n  message: string;\n  apiCallTime: string;\n\n  constructor(data: {[key: string]: any}) {\n    this.data = data;\n    this.busNum = parseInt(this.data.rtNm);\n    this.message = this.data.arrmsg1;\n    this.apiCallTime = this.data.mkTm;\n  }\n\n  private getCorrectionSec(): number {\n    const m = new Moment();\n    return m.getCorrectionSec(this.apiCallTime);\n  }\n\n  getWaitingSec(): number {\n    const bm = new BusMessage(this.message);\n    return bm.getWaitingSec() - this.getCorrectionSec();\n  }\n}\n\nexport { BusUI, BusAPI };\n"]},"metadata":{},"sourceType":"module"}