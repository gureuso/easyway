{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yjh/Documents/React/easyway/components/pages/list.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport Modal from 'components/modal';\nimport { BusUI, BusAPI } from 'lib/bus';\nimport { WeatherAPI } from 'lib/weather';\nimport { SubwayUI, SubwayAPI } from 'lib/subway';\nimport { Interval } from 'lib/common';\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_ismounted\", true);\n\n    _defineProperty(this, \"state\", {\n      currentTime: '',\n      currentWeather: __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }),\n      buses: [],\n      subways: []\n    });\n  }\n\n  setCurrentTime() {\n    const interval = new Interval();\n    interval.set(() => {\n      if (this._ismounted) {\n        this.setState({\n          currentTime: moment().format('HH:mm:ss')\n        });\n      }\n    }, 1000);\n  }\n\n  setCurrentWeather() {\n    const weatherAPI = new WeatherAPI();\n    weatherAPI.getCurrentWeather().then(data => {\n      if (this._ismounted) {\n        this.setState({\n          currentWeather: __jsx(\"div\", {\n            id: \"current_weather\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            id: \"current_weather_title\",\n            className: \"list\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, __jsx(\"img\", {\n            src: data.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          })), __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, data.temp, \"\\xB0\"))), __jsx(\"p\", {\n            id: \"current_weather_main\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, data.main), __jsx(\"p\", {\n            id: \"current_weather_desc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, data.desc), __jsx(\"div\", {\n            id: \"current_weather_more\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, __jsx(\"img\", {\n            src: \"/static/img/plus_btn_01.svg\",\n            onClick: Modal.active,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          })))\n        });\n      }\n    });\n  }\n\n  setCurrentBus() {\n    const api = new BusAPI();\n    api.getBuses(this.props.token).then(data => {\n      let arr = [];\n\n      for (let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        arr.push(__jsx(\"div\", {\n          className: \"current_bus\",\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          className: \"current_bus_title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, bus.name), __jsx(\"p\", {\n          className: \"current_bus_message\",\n          id: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })));\n      }\n\n      this.setState({\n        'buses': arr\n      });\n\n      for (let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        const target = $(`#${key}`);\n        BusUI.setCurrentBus(target, bus.station_id, bus.bus_route_id, bus.ord);\n      }\n    });\n  }\n\n  setCurrentSubway() {\n    let subways = {};\n    const api = new SubwayAPI();\n    api.getSubways(this.props.token).then(data => {\n      for (let subway of data) {\n        subways[subway.station_name] = {};\n      }\n\n      for (let subway of data) {\n        if (subways[subway.station_name][subway.direction]) {\n          subways[subway.station_name][subway.direction].push(subway.train_line_name);\n        } else {\n          subways[subway.station_name][subway.direction] = [subway.train_line_name];\n        }\n      }\n\n      let arr = [];\n\n      for (let stationName in subways) {\n        for (let direction in subways[stationName]) {\n          for (let trainLineName of subways[stationName][direction]) {\n            arr.push(__jsx(\"div\", {\n              key: trainLineName,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, __jsx(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, trainLineName), __jsx(\"span\", {\n              id: trainLineName,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            })));\n          }\n        }\n      }\n\n      this.setState({\n        'subways': arr\n      });\n\n      for (let stationName in subways) {\n        const api = new SubwayAPI();\n        api.getCurrentSubway(stationName).then(data => {\n          for (let direction in subways[stationName]) {\n            for (let trainLineName of subways[stationName][direction]) {\n              for (let subway of data) {\n                if (subway.trainLineName = trainLineName) {\n                  const target = $(`#${trainLineName}`);\n                  SubwayUI.setCurrentSubway(target, subway);\n                  break;\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  setAll() {\n    this.setCurrentTime();\n    this.setCurrentWeather();\n    this.setCurrentBus();\n    this.setCurrentSubway();\n  }\n\n  componentDidMount() {\n    this._ismounted = true;\n    this.setAll();\n  }\n\n  componentWillUnmount() {\n    this._ismounted = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.refresh == true) {\n      this.setAll();\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"inner-content\",\n      id: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      id: \"current_time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.currentTime)), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.currentWeather), this.state.buses, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.subways))));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/components/pages/list.tsx"],"names":["React","moment","$","Modal","BusUI","BusAPI","WeatherAPI","SubwayUI","SubwayAPI","Interval","List","Component","currentTime","currentWeather","buses","subways","setCurrentTime","interval","set","_ismounted","setState","format","setCurrentWeather","weatherAPI","getCurrentWeather","then","data","icon","temp","main","desc","active","setCurrentBus","api","getBuses","props","token","arr","bus","key","station_id","bus_route_id","push","name","target","ord","setCurrentSubway","getSubways","subway","station_name","direction","train_line_name","stationName","trainLineName","getCurrentSubway","setAll","componentDidMount","componentWillUnmount","componentWillReceiveProps","nextProps","refresh","render","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\n\nimport Modal from 'components/modal';\nimport { BusUI, BusAPI } from 'lib/bus';\nimport { WeatherAPI } from 'lib/weather';\nimport { SubwayUI, SubwayAPI } from 'lib/subway';\nimport { Interval } from 'lib/common';\n\ninterface ListProps {\n  refresh: boolean,\n  token: string\n}\n\ninterface ListStates {\n  currentTime: string,\n  currentWeather: JSX.Element,\n  buses: JSX.Element[],\n  subways: JSX.Element[]\n}\n\nclass List extends React.Component<ListProps, ListStates> {\n  _ismounted: boolean = true;\n\n  state = {\n    currentTime: '',\n    currentWeather: (<div></div>),\n    buses: [],\n    subways: []\n  };\n\n  setCurrentTime() {\n    const interval = new Interval();\n    interval.set(() => {\n      if(this._ismounted) {\n        this.setState({currentTime: moment().format('HH:mm:ss')});\n      }\n    }, 1000);\n  }\n\n  setCurrentWeather() {\n    const weatherAPI = new WeatherAPI();\n    weatherAPI.getCurrentWeather().then((data: any) => {\n      if(this._ismounted) {\n        this.setState({currentWeather: (\n          <div id=\"current_weather\">\n            <div id=\"current_weather_title\" className=\"list\">\n              <div><img src={data.icon}/></div>\n              <div><p>{data.temp}°</p></div>\n            </div>\n            <p id=\"current_weather_main\">{data.main}</p>\n            <p id=\"current_weather_desc\">{data.desc}</p>\n            <div id=\"current_weather_more\">\n              <img src=\"/static/img/plus_btn_01.svg\" onClick={Modal.active}/>\n            </div>\n          </div>\n        )});\n      }\n    });\n  }\n\n  setCurrentBus() {\n    const api = new BusAPI();\n    api.getBuses(this.props.token).then(data => {\n      let arr: JSX.Element[] = [];\n      for(let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        arr.push(\n          <div className=\"current_bus\" key={key}>\n            <p className=\"current_bus_title\">{bus.name}</p>\n            <p className=\"current_bus_message\" id={key}></p>\n          </div>\n        )\n      }\n      this.setState({'buses': arr});\n      \n      for(let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        const target = $(`#${key}`);\n        BusUI.setCurrentBus(target, bus.station_id, bus.bus_route_id, bus.ord);\n      }\n    });\n  }\n\n  setCurrentSubway() {\n    let subways: any = {};\n    const api = new SubwayAPI();\n    api.getSubways(this.props.token).then(data => {\n      for(let subway of data) {\n        subways[subway.station_name] = {}\n      }\n      for(let subway of data) {\n        if(subways[subway.station_name][subway.direction]) {\n          subways[subway.station_name][subway.direction].push(\n            subway.train_line_name\n          );\n        } else {\n          subways[subway.station_name][subway.direction] = [\n            subway.train_line_name\n          ];\n        }\n      }\n      \n      let arr: JSX.Element[] = []\n      for(let stationName in subways) {\n          for(let direction in subways[stationName]) {\n            for(let trainLineName of subways[stationName][direction]) {\n              arr.push(\n                <div key={trainLineName}>\n                  <span>{trainLineName}</span>\n                  <span id={trainLineName}></span>\n                </div>\n              )\n            }\n          }\n      }\n      this.setState({'subways': arr});\n\n      for(let stationName in subways) {\n        const api = new SubwayAPI();\n        api.getCurrentSubway(stationName).then(data => {\n          for(let direction in subways[stationName]) {\n            for(let trainLineName of subways[stationName][direction]) {\n              for(let subway of data) {\n                if(subway.trainLineName = trainLineName) {\n                  const target = $(`#${trainLineName}`)\n                  SubwayUI.setCurrentSubway(target, subway);\n                  break;\n                }\n              }\n            }\n          }\n        })\n      }\n    });\n  }\n\n  setAll() {\n    this.setCurrentTime();\n    this.setCurrentWeather();\n    this.setCurrentBus();\n    this.setCurrentSubway();\n  }\n\n  componentDidMount() {\n    this._ismounted = true;\n    this.setAll();\n  }\n  \n  componentWillUnmount() {\n     this._ismounted = false;\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    if(nextProps.refresh == true) {\n      this.setAll();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"inner-content\" id=\"list\">\n          <div className=\"list\">\n            <div>\n              <p id=\"current_time\">{this.state.currentTime}</p>\n            </div>\n\n            <div>{this.state.currentWeather}</div>\n\n            {this.state.buses}\n\n            <div>{this.state.subways}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}