{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yjh/Documents/React/easyway/components/pages/settings.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport $ from 'jquery';\nimport { BusAPI } from 'lib/bus';\nimport { SubwayAPI } from 'lib/subway';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      busStation: [],\n      busRoute: [],\n      busRouteChoice: [],\n      subwayLine: [],\n      subwayLineChoice: []\n    });\n\n    this.setBuses = this.setBuses.bind(this);\n    this.setBusStation = this.setBusStation.bind(this);\n    this.setBusRoute = this.setBusRoute.bind(this);\n    this.addBusRoute = this.addBusRoute.bind(this);\n    this.removeBusRoute = this.removeBusRoute.bind(this);\n    this.setSubwayLine = this.setSubwayLine.bind(this);\n    this.addSubwayLine = this.addSubwayLine.bind(this);\n    this.removeSubwayLine = this.removeSubwayLine.bind(this);\n  }\n\n  componentDidMount() {\n    this.setBuses();\n  }\n\n  setBuses() {\n    let arr = this.state.busRouteChoice; // const key = target.data('st-id') + target.data('busroute-id');\n\n    const api = new BusAPI();\n    api.getBuses(this.props.token).then(data => {\n      for (let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        arr.push(__jsx(\"li\", {\n          key: key,\n          \"data-id\": data.id,\n          \"data-st-id\": data.station_id,\n          \"data-busroute-id\": data.bus_route_id,\n          \"data-ord\": data.ord,\n          \"data-rtnm\": data.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, data.name, __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: this.removeBusRoute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })));\n      }\n\n      this.setState({\n        'busRouteChoice': arr\n      });\n    });\n  }\n\n  removeBusRoute(event) {\n    const target = $(event.target).closest('li');\n    const key = target.data('st-id') + target.data('busroute-id');\n    let arr = this.state.busRouteChoice.filter(value => {\n      return value.key != key;\n    });\n    const api = new BusAPI();\n    api.deleteBus(target.data('id'), this.props.token).then(data => {\n      this.setState({\n        'busRouteChoice': arr\n      });\n    });\n  }\n\n  addBusRoute(event) {\n    const target = $(event.target).closest('div').prev();\n    const key = target.data('st-id') + target.data('busroute-id');\n    let arr = this.state.busRouteChoice;\n    let alreadyFlag = false;\n\n    for (let value of arr) {\n      if (value.key == key) {\n        alreadyFlag = true;\n      }\n    }\n\n    if (alreadyFlag) {\n      return;\n    }\n\n    if (arr.length > 2) {\n      return;\n    }\n\n    const name = target.data('rtnm');\n    const stId = target.data('st-id');\n    const busRouteId = target.data('busroute-id');\n    const ord = target.data('ord');\n    const adirection = target.data('adirection');\n    const api = new BusAPI();\n    api.createBus(name, stId, busRouteId, ord, this.props.token).then(data => {\n      arr.push(__jsx(\"li\", {\n        key: key,\n        \"data-id\": data.id,\n        \"data-st-id\": stId,\n        \"data-busroute-id\": busRouteId,\n        \"data-ord\": ord,\n        \"data-rtnm\": name,\n        \"data-adirection\": adirection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, name, __jsx(\"img\", {\n        src: \"/static/img/plus_btn_01.svg\",\n        onClick: this.removeBusRoute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })));\n      this.setState({\n        'busRouteChoice': arr\n      });\n    });\n  }\n\n  setBusRoute(event) {\n    this.setState({\n      'busStation': []\n    });\n    const arsId = $(event.target).data('ars-id');\n    const api = new BusAPI();\n    api.getBusRoute(arsId).then(data => {\n      data = _Array$isArray(data) ? data : [data];\n      const arr = [];\n\n      for (let i in data) {\n        arr.push(__jsx(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          \"data-st-id\": data[i].stId,\n          \"data-busroute-id\": data[i].busRouteId,\n          \"data-ord\": data[i].staOrd,\n          \"data-rtnm\": data[i].rtNm,\n          \"data-adirection\": data[i].adirection,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, data[i].rtNm, \":\", data[i].adirection), __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: this.addBusRoute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }))));\n      }\n\n      this.setState({\n        'busRoute': arr\n      });\n    });\n  }\n\n  setBusStation(event) {\n    const name = event.target.value;\n\n    if (name.length < 2) {\n      return;\n    }\n\n    const api = new BusAPI();\n    api.getBusStation(name).then(data => {\n      data = data ? data.slice(0, 5) : undefined;\n      const arr = [];\n\n      for (let i in data) {\n        arr.push(__jsx(\"li\", {\n          key: i,\n          \"data-ars-id\": data[i].arsId,\n          onClick: this.setBusRoute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, data[i].stNm));\n      }\n\n      this.setState({\n        'busStation': arr\n      });\n    });\n  }\n\n  removeSubwayLine(event) {\n    const target = $(event.target).closest('li');\n    const key = target.data('train-line-nm');\n    let arr = this.state.subwayLineChoice.filter(value => {\n      return value.key != key;\n    });\n    this.setState({\n      'subwayLineChoice': arr\n    });\n  }\n\n  addSubwayLine(event) {\n    const target = $(event.target).closest('div').prev();\n    const key = target.data('train-line-nm');\n    let arr = this.state.subwayLineChoice.filter(value => {\n      return value.key != key;\n    });\n\n    if (arr.length > 5) {\n      return;\n    }\n\n    arr.push(__jsx(\"li\", {\n      key: key,\n      \"data-updn-line\": target.data('updn-line'),\n      \"data-statn-nm\": target.data('statn-nm'),\n      \"data-train-line-nm\": target.data('train-line-nm'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, target.data('train-line-nm').split(' - ')[0], __jsx(\"img\", {\n      src: \"/static/img/plus_btn_01.svg\",\n      onClick: this.removeSubwayLine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })));\n    this.setState({\n      'subwayLineChoice': arr\n    });\n  }\n\n  setSubwayLine(event) {\n    this.setState({\n      'subwayLine': []\n    });\n    const name = event.target.value;\n\n    if (name.length < 2) {\n      return;\n    }\n\n    const api = new SubwayAPI();\n    api.getCurrentSubway(name).then(data => {\n      const arr = [];\n      let dict = {};\n\n      for (let i in data) {\n        dict[data[i].trainLineNm] = i;\n      }\n\n      for (let i in dict) {\n        const j = dict[i];\n        arr.push(__jsx(\"div\", {\n          key: j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          \"data-updn-line\": data[j].updnLine,\n          \"data-statn-nm\": data[j].statnNm,\n          \"data-train-line-nm\": data[j].trainLineNm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, data[j].trainLineNm), __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: \"/static/img/plus_btn_01.svg\",\n          onClick: this.addSubwayLine,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }))));\n      }\n\n      this.setState({\n        'subwayLine': arr\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      id: \"search-bus-station\",\n      onChange: this.setBusStation,\n      onFocus: this.setBusStation,\n      placeholder: \"\\uC815\\uB958\\uC18C\\uBA85\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), __jsx(\"ul\", {\n      id: \"search-bus-station-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.state.busStation), __jsx(\"div\", {\n      id: \"bus-route-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.busRoute), __jsx(\"ul\", {\n      id: \"bus-route-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, this.state.busRouteChoice)), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      id: \"search-subway-station\",\n      onChange: this.setSubwayLine,\n      onFocus: this.setSubwayLine,\n      placeholder: \"\\uC9C0\\uD558\\uCCA0\\uC5ED\\uBA85(\\uC5ED\\uC81C\\uC678)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      id: \"subway-line-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, this.state.subwayLine), __jsx(\"ul\", {\n      id: \"subway-line-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.state.subwayLineChoice)));\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/components/pages/settings.tsx"],"names":["React","$","BusAPI","SubwayAPI","Settings","Component","constructor","props","busStation","busRoute","busRouteChoice","subwayLine","subwayLineChoice","setBuses","bind","setBusStation","setBusRoute","addBusRoute","removeBusRoute","setSubwayLine","addSubwayLine","removeSubwayLine","componentDidMount","arr","state","api","getBuses","token","then","data","bus","key","station_id","bus_route_id","push","id","ord","name","setState","event","target","closest","filter","value","deleteBus","prev","alreadyFlag","length","stId","busRouteId","adirection","createBus","arsId","getBusRoute","i","staOrd","rtNm","getBusStation","slice","undefined","stNm","split","getCurrentSubway","dict","trainLineNm","j","updnLine","statnNm","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\n\nimport { BusAPI } from 'lib/bus';\nimport { SubwayAPI } from 'lib/subway';\n\ninterface SettingsProps {\n  token: string;\n}\n\ninterface SettingsStates {\n  busStation: JSX.Element[],\n  busRoute: JSX.Element[],\n  busRouteChoice: JSX.Element[],\n  subwayLine: JSX.Element[],\n  subwayLineChoice: JSX.Element[]\n}\n\nclass Settings extends React.Component<SettingsProps, SettingsStates> {\n  constructor(props: any) {\n    super(props);\n\n    this.setBuses = this.setBuses.bind(this);\n\n    this.setBusStation = this.setBusStation.bind(this);\n    this.setBusRoute = this.setBusRoute.bind(this);\n    this.addBusRoute = this.addBusRoute.bind(this);\n    this.removeBusRoute = this.removeBusRoute.bind(this);\n\n    this.setSubwayLine = this.setSubwayLine.bind(this);\n    this.addSubwayLine = this.addSubwayLine.bind(this);\n    this.removeSubwayLine = this.removeSubwayLine.bind(this);\n  }\n\n  state = {\n    busStation: [],\n    busRoute: [],\n    busRouteChoice: [],\n    subwayLine: [],\n    subwayLineChoice: []\n  }\n\n  componentDidMount() {\n    this.setBuses();\n  }\n\n  setBuses() {\n    let arr: JSX.Element[] = this.state.busRouteChoice;\n    // const key = target.data('st-id') + target.data('busroute-id');\n\n    const api = new BusAPI();\n    api.getBuses(this.props.token).then(data => {\n      for(let bus of data) {\n        const key = `${bus.station_id}${bus.bus_route_id}`;\n        arr.push(\n          <li key={key} data-id={data.id} data-st-id={data.station_id} data-busroute-id={data.bus_route_id} data-ord={data.ord} data-rtnm={data.name}>{data.name}<img src=\"/static/img/plus_btn_01.svg\" onClick={this.removeBusRoute}/></li>\n        )\n      }\n      this.setState({'busRouteChoice': arr});\n    });\n  }\n\n  removeBusRoute(event: any) {\n    const target = $(event.target).closest('li');\n    const key = target.data('st-id') + target.data('busroute-id');\n    let arr: JSX.Element[] = this.state.busRouteChoice.filter((value: any) => {\n      return value.key != key;\n    });\n\n    const api = new BusAPI();\n    api.deleteBus(target.data('id'), this.props.token).then(data => {\n      this.setState({'busRouteChoice': arr});\n    });\n  }\n\n  addBusRoute(event: any) {\n    const target = $(event.target).closest('div').prev();\n\n    const key = target.data('st-id') + target.data('busroute-id');\n    let arr: JSX.Element[] = this.state.busRouteChoice;\n    let alreadyFlag = false;\n    for(let value of arr) {\n      if(value.key == key) {\n        alreadyFlag = true;\n      }\n    }\n\n    if(alreadyFlag) {\n      return;\n    }\n    \n    if(arr.length > 2) {\n      return;\n    }\n\n    const name = target.data('rtnm');\n    const stId = target.data('st-id');\n    const busRouteId = target.data('busroute-id');\n    const ord = target.data('ord');\n    const adirection = target.data('adirection');\n\n    const api = new BusAPI();\n    api.createBus(name, stId, busRouteId, ord, this.props.token).then(data => {\n      arr.push(\n        <li key={key} data-id={data.id} data-st-id={stId} data-busroute-id={busRouteId} data-ord={ord} data-rtnm={name} data-adirection={adirection}>{name}<img src=\"/static/img/plus_btn_01.svg\" onClick={this.removeBusRoute}/></li>\n      )\n      this.setState({'busRouteChoice': arr});\n    });\n  }\n\n  setBusRoute(event: any) {\n    this.setState({'busStation': []});\n    const arsId = $(event.target).data('ars-id');\n\n    const api = new BusAPI();\n    api.getBusRoute(arsId).then(data => {\n      data = Array.isArray(data) ? data : [data]\n\n      const arr = [];\n      for(let i in data) {\n        arr.push(\n          <div key={i}>\n            <div data-st-id={data[i].stId} data-busroute-id={data[i].busRouteId} data-ord={data[i].staOrd} data-rtnm={data[i].rtNm} data-adirection={data[i].adirection}>{data[i].rtNm}:{data[i].adirection}</div>\n            <div><img src=\"/static/img/plus_btn_01.svg\" onClick={this.addBusRoute}/></div>\n          </div>\n        )\n      }\n      this.setState({'busRoute': arr});\n    });\n  }\n\n  setBusStation(event: any) {\n    const name = event.target.value;\n    if(name.length < 2) {\n      return;\n    }\n\n    const api = new BusAPI();\n    api.getBusStation(name).then(data => {\n      data = data ? data.slice(0, 5) : undefined;\n\n      const arr = [];\n      for(let i in data) {  \n        arr.push(\n          <li key={i} data-ars-id={data[i].arsId} onClick={this.setBusRoute}>{data[i].stNm}</li>\n        );\n      }\n      this.setState({'busStation': arr});\n    });\n  }\n\n  removeSubwayLine(event: any) {\n    const target = $(event.target).closest('li');\n    const key = target.data('train-line-nm');\n    let arr: JSX.Element[] = this.state.subwayLineChoice.filter((value: any) => {\n      return value.key != key;\n    });\n    this.setState({'subwayLineChoice': arr});\n  }\n\n  addSubwayLine(event: any) {\n    const target = $(event.target).closest('div').prev();\n\n    const key = target.data('train-line-nm');\n    let arr: JSX.Element[] = this.state.subwayLineChoice.filter((value: any) => {\n      return value.key != key;\n    });\n    \n    if(arr.length > 5) {\n      return;\n    }\n    \n    arr.push(\n      <li key={key} data-updn-line={target.data('updn-line')} data-statn-nm={target.data('statn-nm')} data-train-line-nm={target.data('train-line-nm')}>{target.data('train-line-nm').split(' - ')[0]}<img src=\"/static/img/plus_btn_01.svg\" onClick={this.removeSubwayLine}/></li>\n    )\n    this.setState({'subwayLineChoice': arr});\n  }\n\n  setSubwayLine(event: any) {\n    this.setState({'subwayLine': []});\n    \n    const name = event.target.value;\n    if(name.length < 2) {\n      return;\n    }\n\n    const api = new SubwayAPI();\n    api.getCurrentSubway(name).then(data => {\n      const arr = [];\n\n      let dict: any = {};\n      for(let i in data) {\n        dict[data[i].trainLineNm] = i;\n      }\n\n      for(let i in dict) {\n        const j = dict[i];\n        arr.push(\n          <div key={j}>\n            <div data-updn-line={data[j].updnLine} data-statn-nm={data[j].statnNm} data-train-line-nm={data[j].trainLineNm}>{data[j].trainLineNm}</div>\n            <div><img src=\"/static/img/plus_btn_01.svg\" onClick={this.addSubwayLine}/></div>\n          </div>\n        );\n      }\n      this.setState({'subwayLine': arr});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"list\">\n        <div>\n          <input type=\"text\" id=\"search-bus-station\" onChange={this.setBusStation} onFocus={this.setBusStation} placeholder=\"정류소명\"/>\n          <ul id=\"search-bus-station-result\">\n            {this.state.busStation}\n          </ul>\n          <div id=\"bus-route-result\">\n            {this.state.busRoute}\n          </div>\n          <ul id=\"bus-route-choice\">\n            {this.state.busRouteChoice}\n          </ul>\n        </div>\n        <div>\n          <input type=\"text\" id=\"search-subway-station\" onChange={this.setSubwayLine} onFocus={this.setSubwayLine} placeholder=\"지하철역명(역제외)\"/>\n          <div id=\"subway-line-result\">\n            {this.state.subwayLine}\n          </div>\n          <ul id=\"subway-line-choice\">\n            {this.state.subwayLineChoice}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}