{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport { Interval } from './common';\n\nvar TimeUI =\n/*#__PURE__*/\nfunction () {\n  function TimeUI() {\n    _classCallCheck(this, TimeUI);\n  }\n\n  _createClass(TimeUI, [{\n    key: \"setWaitingTime\",\n    value: function setWaitingTime(target) {\n      var sec = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      var callback = arguments.length > 2 ? arguments[2] : undefined;\n      var interval = new Interval();\n      var id = interval.set(function () {\n        var minute = sec / 60 >> 0;\n        var minute_message = minute ? String(minute) + '분' : '';\n        var sec_message = String(sec - minute * 60) + '초';\n        target.text(minute_message + sec_message);\n        sec -= 1;\n\n        if (sec < 0) {\n          interval.clear(id);\n          callback(target);\n        }\n      }, 1000);\n    }\n  }]);\n\n  return TimeUI;\n}();\n\nexport { TimeUI };","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/lib/ui.tsx"],"names":["Interval","TimeUI","target","sec","callback","interval","id","set","minute","minute_message","String","sec_message","text","clear"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,UAAzB;;IAEMC,M;;;;;;;;;mCACWC,M,EAAiE;AAAA,UAApCC,GAAoC,uEAAxB,EAAwB;AAAA,UAApBC,QAAoB;AAC9E,UAAMC,QAAQ,GAAG,IAAIL,QAAJ,EAAjB;AACA,UAAMM,EAAE,GAAGD,QAAQ,CAACE,GAAT,CAAa,YAAM;AAC5B,YAAMC,MAAM,GAAIL,GAAG,GAAG,EAAP,IAAc,CAA7B;AACA,YAAMM,cAAc,GAAGD,MAAM,GAAGE,MAAM,CAACF,MAAD,CAAN,GAAiB,GAApB,GAA0B,EAAvD;AACA,YAAMG,WAAW,GAAGD,MAAM,CAACP,GAAG,GAAIK,MAAM,GAAG,EAAjB,CAAN,GAA8B,GAAlD;AACAN,QAAAA,MAAM,CAACU,IAAP,CAAYH,cAAc,GAAGE,WAA7B;AACAR,QAAAA,GAAG,IAAI,CAAP;;AACA,YAAGA,GAAG,GAAG,CAAT,EAAY;AACVE,UAAAA,QAAQ,CAACQ,KAAT,CAAeP,EAAf;AACAF,UAAAA,QAAQ,CAACF,MAAD,CAAR;AACD;AACF,OAVU,EAUR,IAVQ,CAAX;AAWD;;;;;;AAGH,SAASD,MAAT","sourcesContent":["import { Interval } from './common';\n\nclass TimeUI {\n  setWaitingTime(target: JQuery<HTMLElement>, sec: number=10, callback: Function) {\n    const interval = new Interval();\n    const id = interval.set(() => {\n      const minute = (sec / 60) >> 0;\n      const minute_message = minute ? String(minute) + '분' : '';\n      const sec_message = String(sec - (minute * 60)) + '초';\n      target.text(minute_message + sec_message);\n      sec -= 1;\n      if(sec < 0) {\n        interval.clear(id);\n        callback(target);\n      }\n    }, 1000);\n  }\n}\n\nexport { TimeUI };\n"]},"metadata":{},"sourceType":"module"}