{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport moment from 'moment';\nimport config from 'config.json';\n\nvar Random = /*#__PURE__*/function () {\n  function Random() {\n    _classCallCheck(this, Random);\n  }\n\n  _createClass(Random, null, [{\n    key: \"all\",\n    value: function all(len) {\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      return this.random(characters, len);\n    }\n  }, {\n    key: \"num\",\n    value: function num(len) {\n      var characters = '0123456789';\n      return this.random(characters, len);\n    }\n  }, {\n    key: \"str\",\n    value: function str(len) {\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n      return this.random(characters, len);\n    }\n  }, {\n    key: \"random\",\n    value: function random(characters, len) {\n      var result = '';\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < len; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    }\n  }]);\n\n  return Random;\n}();\n\nvar Temperature = /*#__PURE__*/function () {\n  function Temperature() {\n    _classCallCheck(this, Temperature);\n\n    _defineProperty(this, \"KELVIN_NUM\", config.KELVIN_NUM);\n  }\n\n  _createClass(Temperature, [{\n    key: \"kelvinToCelsius\",\n    value: function kelvinToCelsius(temp) {\n      return parseFloat((temp - this.KELVIN_NUM).toFixed(0));\n    }\n  }]);\n\n  return Temperature;\n}();\n\nvar Moment = /*#__PURE__*/function () {\n  function Moment() {\n    _classCallCheck(this, Moment);\n  }\n\n  _createClass(Moment, [{\n    key: \"getCorrectionSec\",\n    value: function getCorrectionSec(time) {\n      return Math.round((parseInt(moment().format('x')) - parseInt(moment(time).format('x'))) / 1000);\n    }\n  }]);\n\n  return Moment;\n}();\n\nvar Interval = /*#__PURE__*/function () {\n  function Interval() {\n    _classCallCheck(this, Interval);\n  }\n\n  _createClass(Interval, [{\n    key: \"set\",\n    value: function set(callback, ms) {\n      var interval = setInterval(callback, ms);\n      Interval.ids.push(interval);\n      return interval;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(id) {\n      clearInterval(id);\n    }\n  }], [{\n    key: \"clearAll\",\n    value: function clearAll() {\n      var _iterator = _createForOfIteratorHelper(Interval.ids),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var id = _step.value;\n          clearInterval(id);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n\n  return Interval;\n}();\n\n_defineProperty(Interval, \"ids\", []);\n\nexport { Interval, Moment, Temperature, Random };","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/lib/common.tsx"],"names":["moment","config","Random","len","characters","random","result","charactersLength","length","i","charAt","Math","floor","Temperature","KELVIN_NUM","temp","parseFloat","toFixed","Moment","time","round","parseInt","format","Interval","callback","ms","interval","setInterval","ids","push","id","clearInterval"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;;IAEMC,M;;;;;;;wBACOC,G,EAAa;AACtB,UAAMC,UAAU,GAAG,gEAAnB;AACA,aAAO,KAAKC,MAAL,CAAYD,UAAZ,EAAwBD,GAAxB,CAAP;AACD;;;wBAEUA,G,EAAa;AACtB,UAAMC,UAAU,GAAG,YAAnB;AACA,aAAO,KAAKC,MAAL,CAAYD,UAAZ,EAAwBD,GAAxB,CAAP;AACD;;;wBAEUA,G,EAAa;AACtB,UAAMC,UAAU,GAAG,sDAAnB;AACA,aAAO,KAAKC,MAAL,CAAYD,UAAZ,EAAwBD,GAAxB,CAAP;AACD;;;2BAEqBC,U,EAAoBD,G,EAAa;AACrD,UAAIG,MAAM,GAAG,EAAb;AACA,UAAMC,gBAAgB,GAAGH,UAAU,CAACI,MAApC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAApB,EAAyBM,CAAC,EAA1B,EAA8B;AAC5BH,QAAAA,MAAM,IAAIF,UAAU,CAACM,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACN,MAAL,KAAgBE,gBAA3B,CAAlB,CAAV;AACD;;AACD,aAAOD,MAAP;AACD;;;;;;IAGGO,W;;;;wCACSZ,MAAM,CAACa,U;;;;;oCAEJC,I,EAAc;AAC5B,aAAOC,UAAU,CAAC,CAACD,IAAI,GAAG,KAAKD,UAAb,EAAyBG,OAAzB,CAAiC,CAAjC,CAAD,CAAjB;AACD;;;;;;IAGGC,M;;;;;;;qCACaC,I,EAAsB;AACrC,aAAOR,IAAI,CAACS,KAAL,CAAW,CAACC,QAAQ,CAACrB,MAAM,GAAGsB,MAAT,CAAgB,GAAhB,CAAD,CAAR,GAAiCD,QAAQ,CAACrB,MAAM,CAACmB,IAAD,CAAN,CAAaG,MAAb,CAAoB,GAApB,CAAD,CAA1C,IAAwE,IAAnF,CAAP;AACD;;;;;;IAGGC,Q;;;;;;;wBAGAC,Q,EAAoBC,E,EAAoB;AAC1C,UAAMC,QAAQ,GAAGC,WAAW,CAACH,QAAD,EAAWC,EAAX,CAA5B;AACAF,MAAAA,QAAQ,CAACK,GAAT,CAAaC,IAAb,CAAkBH,QAAlB;AACA,aAAOA,QAAP;AACD;;;0BAEKI,E,EAAY;AAChBC,MAAAA,aAAa,CAACD,EAAD,CAAb;AACD;;;+BAEiB;AAAA,iDACAP,QAAQ,CAACK,GADT;AAAA;;AAAA;AAChB,4DAA8B;AAAA,cAApBE,EAAoB;AAC5BC,UAAAA,aAAa,CAACD,EAAD,CAAb;AACD;AAHe;AAAA;AAAA;AAAA;AAAA;AAIjB;;;;;;gBAjBGP,Q,SACqB,E;;AAmB3B,SAASA,QAAT,EAAmBL,MAAnB,EAA2BL,WAA3B,EAAwCX,MAAxC","sourcesContent":["import moment from 'moment';\n\nimport config from 'config.json';\n\nclass Random {\n  static all(len: number) {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    return this.random(characters, len);\n  }\n\n  static num(len: number) {\n    const characters = '0123456789';\n    return this.random(characters, len);\n  }\n\n  static str(len: number) {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n    return this.random(characters, len);\n  }\n\n  private static random(characters: string, len: number) {\n    let result = '';  \n    const charactersLength = characters.length;\n    for (let i = 0; i < len; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n}\n\nclass Temperature {\n  KELVIN_NUM = config.KELVIN_NUM\n\n  kelvinToCelsius(temp: number) {\n    return parseFloat((temp - this.KELVIN_NUM).toFixed(0));\n  }\n}\n\nclass Moment {\n  getCorrectionSec(time: string): number {\n    return Math.round((parseInt(moment().format('x')) - parseInt(moment(time).format('x'))) / 1000);\n  }\n}\n\nclass Interval {\n  static ids: Array<any> = [];\n\n  set(callback: Function, ms: number): number {\n    const interval = setInterval(callback, ms);\n    Interval.ids.push(interval);\n    return interval;\n  }\n\n  clear(id: number) {\n    clearInterval(id);\n  }\n\n  static clearAll() {\n    for(const id of Interval.ids) {\n      clearInterval(id);\n    }\n  }\n}\n\nexport { Interval, Moment, Temperature, Random };\n"]},"metadata":{},"sourceType":"module"}