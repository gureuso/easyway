{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yjh/Documents/React/easyway/components/pages/snsLogin.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport GoogleLoginBtn from 'static/img/sns/google.png';\nimport KakaoLoginBtn from 'static/img/sns/kakao.png';\nimport { Random } from 'lib/common';\nimport config from 'config.json';\n\nvar SNSLogin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SNSLogin, _React$Component);\n\n  function SNSLogin() {\n    _classCallCheck(this, SNSLogin);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SNSLogin).apply(this, arguments));\n  }\n\n  _createClass(SNSLogin, [{\n    key: \"get_redirect_uri\",\n    value: function get_redirect_uri(company) {\n      return \"\".concat(config.API_HOST, \"/accounts/callback/\").concat(company);\n    }\n  }, {\n    key: \"login\",\n    value: function login(company) {\n      var url = '';\n\n      switch (company) {\n        case 'google':\n          url = 'https://accounts.google.com/o/oauth2/v2/auth?' + 'scope=email%20profile&' + 'response_type=code&' + 'state=security_token%3D138r5719ru3e1%26url%3Dhttps://oauth2.example.com/token&' + 'redirect_uri=' + this.get_redirect_uri('google') + '&' + 'client_id=485933391623-5806uemc2ksqf7q7gjoturtqhl0110k4.apps.googleusercontent.com';\n          break;\n\n        case 'facebook':\n          url = 'https://www.facebook.com/dialog/oauth?' + 'client_id=981374768865560&' + 'redirect_uri=' + this.get_redirect_uri('facebook') + '&' + 'scope=email';\n          break;\n\n        case 'kakao':\n          url = 'https://kauth.kakao.com/oauth/authorize?' + 'client_id=019b2468962364c725978946c23b8953&' + 'redirect_uri=' + this.get_redirect_uri('kakao') + '&' + 'response_type=code';\n          break;\n\n        case 'naver':\n          url = 'https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=w8zTKKdu7csfDVKGsMXv&' + 'state=' + Random.all(10) + '&' + 'redirect_uri=' + this.get_redirect_uri('naver');\n      }\n\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"sns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: this.login('google'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: GoogleLoginBtn,\n        className: \"sns-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })))), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"sns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: this.login('kakao'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: KakaoLoginBtn,\n        className: \"sns-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SNSLogin;\n}(React.Component);\n\nexport default SNSLogin;","map":{"version":3,"sources":["/Users/yjh/Documents/React/easyway/components/pages/snsLogin.tsx"],"names":["React","GoogleLoginBtn","KakaoLoginBtn","Random","config","SNSLogin","company","API_HOST","url","get_redirect_uri","all","login","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;IAEMC,Q;;;;;;;;;;;;;qCACaC,O,EAAiB;AAChC,uBAAUF,MAAM,CAACG,QAAjB,gCAA+CD,OAA/C;AACD;;;0BAEKA,O,EAAiB;AACrB,UAAIE,GAAG,GAAG,EAAV;;AACA,cAAOF,OAAP;AACE,aAAK,QAAL;AACEE,UAAAA,GAAG,GAAG,kDACJ,wBADI,GAEJ,qBAFI,GAGJ,gFAHI,GAIJ,eAJI,GAIc,KAAKC,gBAAL,CAAsB,QAAtB,CAJd,GAIgD,GAJhD,GAKJ,oFALF;AAMA;;AACF,aAAK,UAAL;AACED,UAAAA,GAAG,GAAG,2CACJ,4BADI,GAEJ,eAFI,GAEc,KAAKC,gBAAL,CAAsB,UAAtB,CAFd,GAEkD,GAFlD,GAGJ,aAHF;AAIA;;AACF,aAAK,OAAL;AACED,UAAAA,GAAG,GAAG,6CACJ,6CADI,GAEJ,eAFI,GAEc,KAAKC,gBAAL,CAAsB,OAAtB,CAFd,GAE+C,GAF/C,GAGJ,oBAHF;AAIA;;AACF,aAAK,OAAL;AACED,UAAAA,GAAG,GAAG,gGACJ,QADI,GACOL,MAAM,CAACO,GAAP,CAAW,EAAX,CADP,GACwB,GADxB,GAEJ,eAFI,GAEc,KAAKD,gBAAL,CAAsB,OAAtB,CAFpB;AAtBJ;;AA0BA,aAAOD,GAAP;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAW,QAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEV,cAAV;AAA0B,QAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAE,KAAKU,KAAL,CAAW,OAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAET,aAAV;AAAyB,QAAA,SAAS,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CARF,CADF;AAkBD;;;;EAvDoBF,KAAK,CAACY,S;;AA0D7B,eAAeP,QAAf","sourcesContent":["import React from 'react';\n\nimport GoogleLoginBtn from 'static/img/sns/google.png';\nimport KakaoLoginBtn from 'static/img/sns/kakao.png';\nimport { Random } from 'lib/common';\nimport config from 'config.json';\n\nclass SNSLogin extends React.Component {\n  get_redirect_uri(company: string) {\n    return `${config.API_HOST}/accounts/callback/${company}`;\n  }\n\n  login(company: string) {\n    let url = '';\n    switch(company) {\n      case 'google':\n        url = 'https://accounts.google.com/o/oauth2/v2/auth?' +\n          'scope=email%20profile&' +\n          'response_type=code&' +\n          'state=security_token%3D138r5719ru3e1%26url%3Dhttps://oauth2.example.com/token&' +\n          'redirect_uri=' + this.get_redirect_uri('google') + '&' +\n          'client_id=485933391623-5806uemc2ksqf7q7gjoturtqhl0110k4.apps.googleusercontent.com';\n        break;\n      case 'facebook':\n        url = 'https://www.facebook.com/dialog/oauth?' +\n          'client_id=981374768865560&' +\n          'redirect_uri=' + this.get_redirect_uri('facebook') + '&' +\n          'scope=email';\n        break;\n      case 'kakao':\n        url = 'https://kauth.kakao.com/oauth/authorize?' +\n          'client_id=019b2468962364c725978946c23b8953&' +\n          'redirect_uri=' + this.get_redirect_uri('kakao') + '&' +\n          'response_type=code';\n        break;\n      case 'naver':\n        url = 'https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=w8zTKKdu7csfDVKGsMXv&' +\n          'state=' + Random.all(10) + '&' +\n          'redirect_uri=' + this.get_redirect_uri('naver');\n    }\n    return url;\n  }\n\n  render() {\n    return (\n      <div className=\"list\">\n        <div>\n          <div className=\"sns\">\n            <a href={this.login('google')}>\n              <img src={GoogleLoginBtn} className=\"sns-btn\"/>\n            </a>\n          </div>\n        </div>\n        <div>\n          <div className=\"sns\">\n            <a href={this.login('kakao')}>\n              <img src={KakaoLoginBtn} className=\"sns-btn\"/>\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SNSLogin;\n"]},"metadata":{},"sourceType":"module"}