{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport moment from 'moment';\nimport config from '../config.json';\n\nclass Temperature {\n  constructor() {\n    _defineProperty(this, \"KELVIN_NUM\", config.KELVIN_NUM);\n  }\n\n  kelvinToCelsius(temp) {\n    return _parseFloat((temp - this.KELVIN_NUM).toFixed(0));\n  }\n\n}\n\nclass Moment {\n  getCorrectionSec(time) {\n    return Math.round((_parseInt(moment().format('x')) - _parseInt(moment(time).format('x'))) / 1000);\n  }\n\n}\n\nclass Interval {\n  set(callback, ms) {\n    const interval = setInterval(callback, ms);\n    Interval.ids.push(interval);\n    return interval;\n  }\n\n  clear(id) {\n    clearInterval(id);\n  }\n\n  static clearAll() {\n    for (const id of Interval.ids) {\n      clearInterval(id);\n    }\n  }\n\n}\n\n_defineProperty(Interval, \"ids\", []);\n\nexport { Interval, Moment, Temperature };","map":null,"metadata":{},"sourceType":"module"}