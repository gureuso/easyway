{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nimport xml from 'fast-xml-parser';\nimport config from 'config.json';\nimport { Moment } from './common';\nimport { TimeUI } from './ui';\n\nvar BusUI =\n/*#__PURE__*/\nfunction () {\n  function BusUI() {\n    _classCallCheck(this, BusUI);\n  }\n\n  _createClass(BusUI, null, [{\n    key: \"setWaitingTime\",\n    value: function setWaitingTime(target, sec) {\n      var ui = new TimeUI();\n      ui.setWaitingTime(target, sec, BusUI.setCurrentBus);\n    }\n  }, {\n    key: \"setCurrentBus\",\n    value: function setCurrentBus(target) {\n      var api = new BusAPI();\n      var res = api.getDataByRoute();\n      res.then(function (data) {\n        if (data) {\n          var bus = new Bus(data);\n          var waitingSec = bus.getWaitingSec();\n\n          if (waitingSec < 1) {\n            target.text(bus.message);\n          } else {\n            BusUI.setWaitingTime(target, waitingSec);\n          }\n        } else {\n          target.text('data is null');\n        }\n      });\n    }\n  }]);\n\n  return BusUI;\n}();\n\nvar BusAPI =\n/*#__PURE__*/\nfunction () {\n  function BusAPI() {\n    _classCallCheck(this, BusAPI);\n\n    _defineProperty(this, \"API_KEY\", config.BUS_API_KEY);\n\n    _defineProperty(this, \"PROXY_HOST\", config.PROXY_HOST);\n  }\n\n  _createClass(BusAPI, [{\n    key: \"proxy\",\n    value: function proxy(url) {\n      return axios.get(this.PROXY_HOST + '/test/proxy?url=' + encodeURIComponent(url)).then(function (response) {\n        var data = xml.parse(response.data.data.data).ServiceResult.msgBody;\n        return data ? data.itemList : undefined;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        return undefined;\n      });\n    }\n  }, {\n    key: \"getDataByRoute\",\n    value: function getDataByRoute() {\n      var stId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 116000149;\n      var busRouteId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100100453;\n      var ord = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 35;\n      var url = 'http://ws.bus.go.kr/api/rest/arrive/getArrInfoByRoute?';\n      url += 'serviceKey=' + this.API_KEY;\n      url += '&stId=' + stId;\n      url += '&busRouteId=' + busRouteId;\n      url += '&ord=' + ord;\n      return this.proxy(url);\n    }\n  }]);\n\n  return BusAPI;\n}();\n\nvar BusMessage =\n/*#__PURE__*/\nfunction () {\n  function BusMessage(message) {\n    _classCallCheck(this, BusMessage);\n\n    _defineProperty(this, \"message\", void 0);\n\n    this.message = message;\n  }\n\n  _createClass(BusMessage, [{\n    key: \"getWaitingSec\",\n    value: function getWaitingSec() {\n      var matchMinute = this.message.match(/\\d+분/g);\n      var minute = matchMinute ? _parseInt(matchMinute[0].replace('분', '')) : 0;\n      var matchSec = this.message.match(/\\d+초/g);\n      var sec = matchSec ? _parseInt(matchSec[0].replace('초', '')) : 0;\n      return minute * 60 + sec;\n    }\n  }, {\n    key: \"checkBusShutdown\",\n    value: function checkBusShutdown() {\n      if (this.message.search(/운행종료/g) != -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return BusMessage;\n}();\n\nvar Bus =\n/*#__PURE__*/\nfunction () {\n  function Bus(data) {\n    _classCallCheck(this, Bus);\n\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"busNum\", void 0);\n\n    _defineProperty(this, \"message\", void 0);\n\n    _defineProperty(this, \"apiCallTime\", void 0);\n\n    this.data = data;\n    this.busNum = _parseInt(this.data.rtNm);\n    this.message = this.data.arrmsg1;\n    this.apiCallTime = this.data.mkTm;\n  }\n\n  _createClass(Bus, [{\n    key: \"getCorrectionSec\",\n    value: function getCorrectionSec() {\n      var m = new Moment();\n      return m.getCorrectionSec(this.apiCallTime);\n    }\n  }, {\n    key: \"getWaitingSec\",\n    value: function getWaitingSec() {\n      var bm = new BusMessage(this.message);\n      return bm.getWaitingSec() - this.getCorrectionSec();\n    }\n  }]);\n\n  return Bus;\n}();\n\nexport { BusUI };","map":null,"metadata":{},"sourceType":"module"}